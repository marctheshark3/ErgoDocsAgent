{
  "title": "SigmaJoin - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/eco/sigmajoin/",
  "summary": "Sigmajoin is a privacy protocol designed for use with UTXO-based blockchains, aiming to enhance user anonymity. It builds on the principles of a previous protocol called Zerojoin but introduces features to make it more practical and efficient. The mixing process can be outsourced to a third-party service called a mixer. These mixers can perform the mixing operations in a trustless manner, meaning they cannot steal funds. Sigmajoin allows for transactions that appear to be mixes but are actually withdrawals.",
  "keywords": [
    "sigmajoin",
    "privacy",
    "protocol",
    "utxo",
    "blockchain",
    "user",
    "anonymity",
    "principle",
    "zerojoin",
    "feature",
    "process",
    "party",
    "service",
    "mixer",
    "operation",
    "trustless",
    "manner",
    "fund",
    "transaction",
    "withdrawal",
    "observer",
    "mining",
    "challenge",
    "document",
    "detail",
    "proof",
    "whitepaper"
  ],
  "sections": [
    {
      "heading": "What is Sigmajoin?#",
      "content": "Sigmajoin is a privacy protocol designed for use with UTXO-based blockchains, aiming to enhance user anonymity. It builds on the principles of a previous protocol called Zerojoin but introduces features to make it more practical and efficient."
    },
    {
      "heading": "Key Advantages#",
      "content": "ZeroJoin (ErgoMixer)\nSigmajoin\n\n\n\n\nProofs Used\nProofs of knowledge of Diffie-Hellman tuples\nProofs of knowledge of Diffie-Hellman tuples\n\n\nInteraction Level\nPartially Non-interactive: Requires online presence for remixing\nNon-interactive\n\n\nOutsourceability\nNo, mixing cannot be outsourced\nYes, mixes can be outsourced to third-parties\n\n\nTypes of Boxes\n2 (Half-Mix and Full-Mix): Limited to two boxes, constraining scalability and flexibility\nMore than 2: Offers better scalability and flexibility. Half-mix boxes eliminated as bloat\n\n\nStealth Withdraw\nSupported\nSupported\n\n\nFee Handling\nEmbedded Fee: Includes fees within mix boxes, requiring meticulous calculation\nOutsourced Fee: Fees paid by third-party \"mixer,\" simplifying the process and adding flexibility"
    },
    {
      "heading": "1. Outsourceability#",
      "content": "The mixing process can be outsourced to a third-party service called a mixer. These mixers can perform the mixing operations in a trustless manner, meaning they cannot steal funds."
    },
    {
      "heading": "2. Stealth Withdraw#",
      "content": "Sigmajoin allows for transactions that appear to be mixes but are actually withdrawals. This makes it even more difficult for an observer to trace transactions, enhancing privacy."
    },
    {
      "heading": "3. Outsourced Fee#",
      "content": "In many privacy protocols, how to pay the mining fee is a challenge. Sigmajoin allows the fee to be paid by the third-party mixers, further simplifying the process for users."
    },
    {
      "heading": "Basics#",
      "content": "Mix-box: A special kind of coin (or UTXO) used in Sigmajoin. Each mix-box has two registers a and b which are elements of a mathematical group G.\nAlice: The generic term for a participant in the protocol."
    },
    {
      "heading": "Core Operations#",
      "content": "Deposit: Users can deposit their coins into a special 'pool' as mix-boxes. These boxes can be in fixed denominations.\nMix: A third-party service or another user can take any two mix-boxes from the pool and mix them. After mixing, two new mix-boxes are added back to the pool. This process conceals the original ownership of the boxes.\nWithdraw: Users can withdraw their coins from the pool at any time."
    },
    {
      "heading": "Steps for Mixing Boxes#",
      "content": "Select Two Boxes: Choose any two mix-boxes from the pool.\nRe-randomise Public Key: Perform a mathematical operation on the registers a and b of each selected mix-box.\nValidation: Prove that the mathematical operations were done correctly. The new mix-boxes should look identical to an observer.\nNote: This is a simplified document. For technical details and mathematical proofs, consult the whitepaper.\nDocumentation \nOriginal forum posts for Outsourceable mix\nStealth transfer"
    }
  ],
  "qa_pairs": []
}