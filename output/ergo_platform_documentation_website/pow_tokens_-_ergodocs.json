{
  "title": "PoW Tokens - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/uses/PoW_tokens/",
  "summary": "Ergo allows the issuance of one token per transaction, where the token id must match the id of the box of the first input. When a box is generated, the id of the future token is known. This id is computed through hashing. By iterating over a register (for example, R4) used as a nonce, a token with specific id properties can be created. This could include ids starting with a certain number of zeroes.",
  "keywords": [
    "ergo",
    "issuance",
    "token",
    "transaction",
    "input",
    "register",
    "example",
    "nonce",
    "property",
    "number",
    "zero",
    "work",
    "vanitygen",
    "address",
    "concept",
    "bitcoin",
    "contract",
    "proof",
    "fungible",
    "tokens",
    "nfts",
    "case",
    "application",
    "spam",
    "filtering",
    "discussion",
    "link"
  ],
  "sections": [
    {
      "heading": "Proof-of-Work Backed Tokens#",
      "content": "Ergo allows the issuance of one token per transaction, where the token id must match the id of the box of the first input.\nWhen a box is generated, the id of the future token is known. This id is computed through hashing.\nBy iterating over a register (for example, R4) used as a nonce, a token with specific id properties can be created. This could include ids starting with a certain number of zeroes. Therefore, some computational work may be required to generate such a token, similar to the VanityGen-address concept in Bitcoin, but applied to tokens.\nCertain contracts may only accept these Proof-of-Work backed Non-Fungible Tokens (NFTs).\nWhile specific use-cases have not been fully explored, potential applications could include spam filtering.\nFor more detailed discussions, refer to this link."
    }
  ],
  "qa_pairs": []
}