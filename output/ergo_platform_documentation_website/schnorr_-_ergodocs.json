{
  "title": "Schnorr - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/dev/scs/sigma/schnorr/",
  "summary": "In the simplest case, a signature in an Ergo transaction is a Schnorr signature. In more complex cases, it corresponds to a subset of Generalized Schnorr Proofs, which are used in privacy-preserving applications and advanced cryptographic protocols. The Schnorr signature is a core cryptographic primitive in Ergo, used both in basic transaction validation and as part of more complex proof systems. It is simple, efficient, and secure, making it an ideal choice for the wide range of cryptographic functionalities in Ergo. Ergo\u00e2\u0080\u0099s Schnorr signatures are implemented using the SecP256K1 elliptic curve, the same curve used in Bitcoin.",
  "keywords": [
    "case",
    "signature",
    "ergo",
    "transaction",
    "schnorr",
    "subset",
    "proofs",
    "privacy",
    "application",
    "protocol",
    "primitive",
    "validation",
    "part",
    "proof",
    "system",
    "choice",
    "range",
    "functionality",
    "ergo\u00e2\u0080\u0099s",
    "secp256k1",
    "curve",
    "bitcoin",
    "flexibility",
    "scheme",
    "process",
    "generation",
    "signing",
    "verification",
    "message",
    "step",
    "verifier",
    "compute",
    "check",
    "\\parallel",
    "condition",
    "signer",
    "corresponding",
    "sigma",
    "framework",
    "musig",
    "participant",
    "efficiency",
    "size",
    "adaptor",
    "extension",
    "swap",
    "exchange",
    "secret",
    "combination",
    "example",
    "resource",
    "basis",
    "tool",
    "contract",
    "developer",
    "creation",
    "dapps",
    "security",
    "infrastructure",
    "forefront",
    "technology",
    "reading",
    "explore"
  ],
  "sections": [
    {
      "heading": "Schnorr Signature#",
      "content": "In the simplest case, a signature in an Ergo transaction is a Schnorr signature. In more complex cases, it corresponds to a subset of Generalized Schnorr Proofs, which are used in privacy-preserving applications and advanced cryptographic protocols.\nThe Schnorr signature is a core cryptographic primitive in Ergo, used both in basic transaction validation and as part of more complex proof systems. It is simple, efficient, and secure, making it an ideal choice for the wide range of cryptographic functionalities in Ergo."
    },
    {
      "heading": "Overview#",
      "content": "Ergo\u00e2\u0080\u0099s Schnorr signatures are implemented using the SecP256K1 elliptic curve, the same curve used in Bitcoin. The flexibility of Schnorr signatures enables Ergo to support a range of applications, from simple transactions to more advanced multi-signature schemes and privacy-enhancing protocols."
    },
    {
      "heading": "Key Properties:#",
      "content": "Elliptic Curve: Ergo uses SecP256K1, ensuring compatibility with Bitcoin-based systems.\nGeneralized Proofs: In Ergo, Schnorr signatures can be generalized into complex Sigma protocol proofs that allow for privacy-preserving multi-party computations and other advanced cryptographic applications.\nStandards Compliance: Ergo\u00e2\u0080\u0099s implementation closely follows established cryptographic standards (RFCs), allowing for interoperability with protocols like MuSig."
    },
    {
      "heading": "How Schnorr Signatures Work#",
      "content": "The Schnorr signature process consists of key generation, signing, and verification."
    },
    {
      "heading": "Key Generation#",
      "content": "A user generates a private key \\( x \\) and computes the corresponding public key \\( P = xG \\), where \\( G \\) is the generator point on the elliptic curve."
    },
    {
      "heading": "Signing#",
      "content": "To sign a message \\( m \\), the following steps are performed:\nGenerate a random nonce \\( k \\) and compute \\( R = kG \\).\nHash the values \\( R \\), \\( P \\), and the message \\( m \\) to generate a challenge \\( e \\):\n   [\n   e = H(R \\parallel P \\parallel m)\n   ]\nCompute the signature \\( s \\) as:\n   [\n   s = k + ex\n   ]"
    },
    {
      "heading": "Verification#",
      "content": "To verify a signature \\( (s, e) \\), the verifier computes:\n[\nR' = sG - eP\n]\nand checks if:\n[\ne = H(R' \\parallel P \\parallel m)\n]\nIf the condition holds, the signature is valid, demonstrating that the signer knows the private key corresponding to the public key \\( P \\)."
    },
    {
      "heading": "Generalized Schnorr Proofs#",
      "content": "In more complex cases, Ergo extends Schnorr signatures into Generalized Schnorr Proofs as part of the Sigma protocol framework. These generalized proofs enable advanced cryptographic functionalities such as:\nMulti-Signature Protocols: Implementations like MuSig, which allows multiple participants to collectively sign a transaction. This reduces the overall transaction size and preserves privacy by aggregating public keys and signatures.\nRing Signatures: Where one can prove they belong to a group of signers without revealing which specific individual signed the message.\nThreshold Signatures: Schemes like k-out-of-n signatures, where a subset of signers must collaborate to authorize a transaction."
    },
    {
      "heading": "1. MuSig (Multi-Signature Protocols)#",
      "content": "The MuSig protocol allows multiple participants to collaboratively generate a Schnorr signature. This enhances privacy and efficiency, as the final signature is indistinguishable from a regular Schnorr signature, and the transaction size is reduced.\nUse Case: Multi-signature wallets, where multiple parties must sign off on a transaction.\nPrivacy: The individual signers are indistinguishable from each other."
    },
    {
      "heading": "2. Adaptor Signatures for Atomic Swaps#",
      "content": "Adaptor signatures are an extension of Schnorr signatures that facilitate atomic swaps and cross-chain exchanges. These signatures enable conditional transactions, allowing a swap to be completed only when a specific secret is revealed."
    },
    {
      "heading": "3. Privacy-Preserving Transactions#",
      "content": "Ergo uses Schnorr signatures in combination with Sigma protocols to enable privacy-preserving applications, such as:\nMixers: Anonymous transaction systems like ZeroJoin rely on Schnorr-based ring signatures.\nStealth Addresses: Ensure recipient privacy by generating one-time addresses for each transaction."
    },
    {
      "heading": "Sigma Protocols and Schnorr Signatures#",
      "content": "Schnorr signatures are a foundational part of Ergo\u00e2\u0080\u0099s Sigma protocol framework. Sigma protocols generalize Schnorr signatures, allowing them to be composed into complex cryptographic proofs. For example:\nRing signatures: Prove that a signer belongs to a group without revealing which individual actually signed.\nThreshold signatures: Require collaboration between multiple parties to authorize a transaction.\nNon-Interactive Proofs: Sigma proofs can be transformed into non-interactive proofs via the Fiat-Shamir transformation, which allows them to be used in blockchain environments without interactive verification."
    },
    {
      "heading": "Resources for Developers#",
      "content": "To dive deeper into Schnorr signatures and how they are implemented in Ergo, refer to the following resources:\nSchnorr-based signing function: Sign function based on Schnorr protocol.\nGeneralized Schnorr proofs: Learn how SigmaBoolean is used to create advanced cryptographic conditions on the Ergo blockchain in the SigmaBoolean Documentation."
    },
    {
      "heading": "Conclusion#",
      "content": "Schnorr signatures are central to Ergo\u00e2\u0080\u0099s cryptographic framework, both as simple transaction signatures and as the basis for Generalized Schnorr Proofs. By leveraging Sigma protocols, Ergo extends Schnorr signatures into powerful cryptographic tools for privacy-preserving applications, multi-signature schemes, and complex cryptographic contracts.\nFor developers, these tools enable the creation of advanced decentralized applications (dApps) that prioritize both privacy and security. As part of the broader cryptographic infrastructure, Schnorr signatures ensure that Ergo remains at the forefront of privacy-focused blockchain technology.\nFor further reading, explore:\nMuSig paper\nAdaptor Signatures\nSigmaBoolean Documentation"
    }
  ],
  "qa_pairs": []
}