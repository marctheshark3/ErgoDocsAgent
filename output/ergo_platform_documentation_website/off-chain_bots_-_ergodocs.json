{
  "title": "Off-Chain Bots - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/dev/oc/dex_bots/",
  "summary": "Taken from ergo-dex-backend A set of off-chain services facilitating Spectrum. DEX functioning. AMM DEX services:  OrderBook DEX services: The services require access to an Ergo node, so if you do not have one yet install as instructed here: Ergo github Besides the node the services depend on tools such as Kafka and Redis to run, to make it easier to manage a docker based solution has been made to allow for easy building and running of the services. The only requirements besides the node are that you have the following installed:\n - GIT to download the code and help fetch updates.",
  "keywords": [
    "ergo",
    "backend",
    "chain",
    "service",
    "spectrum",
    "functioning",
    "orderbook",
    "access",
    "node",
    "github",
    "tool",
    "kafka",
    "redis",
    "docker",
    "solution",
    "building",
    "requirement",
    "following",
    "code",
    "update",
    "java",
    "compose",
    "windows",
    "first",
    "repo",
    "future",
    "folder",
    "clone",
    "https://github.com/ergolabs/ergo-dex-backend.git",
    "instruction",
    "build",
    "script",
    "file",
    "configuration",
    "config.env",
    "example",
    "config-example.env",
    "copy",
    "value",
    "./config",
    "address",
    "localhost/127.0.0.1",
    "container",
    "host",
    "image",
    "thing",
    "./run",
    "command",
    "window",
    "linux"
  ],
  "sections": [
    {
      "heading": "Spectrum.DEX off-chain services#",
      "content": "Taken from ergo-dex-backend"
    },
    {
      "heading": "Introduction#",
      "content": "A set of off-chain services facilitating Spectrum.DEX functioning.\nAMM DEX services:\nUTXO Tracker - extracts AMM orders and pool state updates from the UTXO feed\nAMM Executor - executes AMM orders into a transaction chain\nPool Resolver - tracks pool updates\nOrderBook DEX services:\nUTXO Tracker - extracts orders from the UTXO feed\nMatcher - order-book matching engine\nOrders Executor - executes orders\nMarkets API - aggregates market data and provides a convenient API to access it"
    },
    {
      "heading": "Prerequisites#",
      "content": "The services require access to an Ergo node, so if you do not have one yet install as instructed here: Ergo github\nBesides the node the services depend on tools such as Kafka and Redis to run, to make it easier to manage a docker based solution has been made to allow for easy building and running of the services.\nThe only requirements besides the node are that you have the following installed:\n - GIT to download the code and help fetch updates. GIT\n - SBT (which requires Java) for building the bots. SBT\n - Docker and Docker-compose (included in Docker for Windows). Docker"
    },
    {
      "heading": "Building#",
      "content": "First, you need to download the code from this repo. The easiest way to keep it updated in the future is by using git:\ncd <the folder you want to keep the off-chain services code in>\ngit clone https://github.com/ergolabs/ergo-dex-backend.git\n\nInstructions for building the services are all combined in the build script and the docker-compose.yml file. The only configuration needed for running the services need to be stored in a file called config.env. An example can be found in config-example.env\nMake a copy of the example file, name it config.env and edit the file to match your values:\ncd ergo-dex-backend\ncp ./config-example.env ./config.env\n\nThe 2 values that need to be changed in the config.env file are the address you want to recieve fees on and the URI to your node (localhost/127.0.0.1 might not be accessible from within a docker container, it is best to use the local lan ip if the node is running on the same host).\nFinally the Docker images need to be build before running them:\n./build"
    },
    {
      "heading": "Running the services#",
      "content": "Once the Docker images are built the only thing left to do is to run them:\n./run"
    },
    {
      "heading": "Verifying the services are running correctly#",
      "content": "You can look into the logs of the services to ensure they are running correctly. To look at a combined log for all services use the following command:\nWindows:\ncd ergo-dex-backend\ndocker compose logs -f\n\nLinux:\ncd ergo-dex-backend\nsudo docker-compose logs -f"
    }
  ],
  "qa_pairs": []
}