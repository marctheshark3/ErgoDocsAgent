{
  "title": "AppKit - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/dev/stack/appkit/",
  "summary": "Ergo Appkit is a library for polyglot development of Ergo Applications based on GraalVM. It is a thin wrapper around core components provided by the ErgoScript interpreter and Ergo protocol implementations which are written in Scala. It is published on maven repository and cross-compiled to both Java 7 and Java 8+ jars. AppKit provides methods for the following: Using Appkit, Ergo applications can be written in one of the languages supported by GraalVM (i.e. Java, JavaScript, C/C++, Python, Ruby, R) and using this library, applications can communicate with Ergo nodes via unified API and programming model provided by Appkit. In addition, Appkit based Ergo applications can be compiled into native code using native-image ahead of time compiler and then executed without Java VM with very fast startup time and lower runtime memory overhead compared to a Java VM.",
  "keywords": [
    "ergo",
    "appkit",
    "library",
    "development",
    "applications",
    "graalvm",
    "wrapper",
    "core",
    "component",
    "ergoscript",
    "interpreter",
    "protocol",
    "implementation",
    "scala",
    "maven",
    "repository",
    "java",
    "method",
    "following",
    "application",
    "language",
    "javascript",
    "python",
    "ruby",
    "node",
    "programming",
    "model",
    "addition",
    "code",
    "image",
    "time",
    "compiler",
    "runtime",
    "memory",
    "option",
    "performance",
    "latency",
    "microservice",
    "general",
    "example",
    "programmaticaly",
    "transaction",
    "ergopay",
    "gradle"
  ],
  "sections": [
    {
      "heading": "Appkit#",
      "content": "Ergo Appkit is a library for polyglot development of Ergo Applications based on GraalVM.\nIt is a thin wrapper around core components provided by the ErgoScript interpreter and Ergo protocol implementations which are written in Scala. It is published on maven repository and cross-compiled to both Java 7 and Java 8+ jars.\nAppKit provides methods for the following:\nFetch data from Ergo Explorer API\nInteract with Ergo Node, both public and private methods\nBuild transactions and sign them\nHelper methods to handle cryptographic like calculating PK addresses from secrets\nUsing Appkit, Ergo applications can be written in one of the languages supported by GraalVM (i.e. Java, JavaScript, C/C++, Python, Ruby, R) and using this library, applications can communicate with Ergo nodes via unified API and programming model provided by Appkit. In addition, Appkit based Ergo applications can be compiled into native code using native-image ahead of time compiler and then executed without Java VM with very fast startup time and lower runtime memory overhead compared to a Java VM. This is an attractive option for high-performance, low-latency microservices."
    },
    {
      "heading": "Tutorials#",
      "content": "General Example\n\u00f0\u009f\u0094\u0097 AppKit By ExampleFollow this example to create and programmaticaly send a transaction.\nErgoPay Example\nGradle"
    },
    {
      "heading": "Videos#",
      "content": "AppKit by Example"
    },
    {
      "heading": "Code examples#",
      "content": "Appkit Examples\nTesting Ergo Contracts Off-chain"
    },
    {
      "heading": "How-to Guides#",
      "content": "Ergo Android application that demonstrates how Ergo Appkit can be used to develop Ergo applications running on Android."
    },
    {
      "heading": "References#",
      "content": "ErgoTool | A Command Line Interface for Ergo based on Appkit and GraalVM native-image. Read the introduction and overview."
    }
  ],
  "qa_pairs": []
}