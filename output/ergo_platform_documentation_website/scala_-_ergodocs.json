{
  "title": "Scala - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/dev/lang/scala/",
  "summary": "Ergo's primary language is Scala. Similarly, the scripting language used by Ergo, ErgoScript, is also based on Scala. If you're new to Scala development with Ergo, the Ergo Scala Skeleton App is a great place to start. Ergo's primary language is Scala. Similarly, the scripting language used by Ergo, ErgoScript, is also based on Scala, but the off-chain code can be written in any language.",
  "keywords": [
    "ergo",
    "language",
    "scala",
    "script",
    "ergoscript",
    "development",
    "skeleton",
    "place",
    "chain",
    "code",
    "developer",
    "access",
    "selection",
    "tool",
    "software",
    "kits",
    "rust",
    "feature",
    "core",
    "component",
    "reference",
    "node",
    "sigmastate",
    "interpreter",
    "migration",
    "type",
    "system",
    "enhancement",
    "tutorial",
    "guide",
    "explanation",
    "resource",
    "journey",
    "note",
    "interface",
    "library",
    "change"
  ],
  "sections": [
    {
      "heading": "Scala Development with Ergo#",
      "content": "Ergo's primary language is Scala. Similarly, the scripting language used by Ergo, ErgoScript, is also based on Scala.\nIf you're new to Scala development with Ergo, the Ergo Scala Skeleton App is a great place to start."
    },
    {
      "heading": "Why Scala?#",
      "content": "Ergo's primary language is Scala. Similarly, the scripting language used by Ergo, ErgoScript, is also based on Scala, but the off-chain code can be written in any language. Developers have access to a growing selection of tools and Software Development Kits (SDKs) for JVM, Rust and JS/TS.\nScala has several features that set it apart from other JVM languages.\nFirstly, it is truly cross-platform, as the same code can run on JVM and JavaScript natively. This is a feature that is not found in many other languages.\nAdditionally, key ecosystem libraries for Scala support all platforms, and the popularity of Scala.js and Scala-native is increasing.\nAnother advantage of Scala is its conciseness, both in terms of syntax and conceptual level.\nDespite its high-level nature, Scala can also be more efficient than similar Java code due to its ability to use primitive unboxed types, and the ability of the Scala compiler to perform code specialization.\nFurthermore, Scala is multi-paradigm, allowing for the combination of OOP, FP, and LP, making it suitable for a wide range of domains.\nLastly, Scala 3 brings even more powerful features such as metaprogramming and tools for zero-cost abstractions."
    },
    {
      "heading": "Scala Versioning (Scala 3)#",
      "content": "Ergo's core components, including the reference node and sigmastate-interpreter, have undergone migration to Scala 3. This migration leverages the newer language features, improved type system, and tooling enhancements offered by Scala 3.\nRationale & Implications: For a detailed understanding of the motivations behind the Scala 3 migration and its potential impact on the ecosystem (including Long-Term Support plans), refer to the official Scala blog post: Next Steps for Scala 3 and Scala 2 Long-Term Support.\nDeveloper Impact: Developers contributing to or building upon these core libraries need to ensure their development environment and build tools (like SBT) are compatible with Scala 3. While Scala 3 offers significant improvements, developers should be aware of potential syntax changes or library compatibility adjustments compared to Scala 2."
    },
    {
      "heading": "Learning Resources#",
      "content": "Here are some tutorials, guides, and explanations to help you get started with Scala development on Ergo:\nErgoScript: Learn about ErgoScript, Ergo's scripting language.\nAppKit: Discover how to use Ergo's AppKit to develop applications.\nErgo Tutorials by Zackbalbin: A collection of tutorials for Ergo development.\nLearning Ergo 101: Development Workflow: A guide to the development workflow for Ergo."
    },
    {
      "heading": "Development Resources#",
      "content": "Here are some resources that can assist you in your Scala development journey with Ergo:\nsigmastate-interpreter: This is an ErgoScript compiler and ErgoTree Interpreter implementation for Ergo blockchain's Sigma Language. For the development of Ergo applications using JVM languages, consider using Appkit.\nScoreX: An open-source, modular blockchain & cryptocurrency framework.\nScrypto: An open-source cryptographic toolkit designed to make it easier and safer for developers to use cryptography in their applications. It's based on Scorex and used internally in Ergo Node and ergo-wallet.\nErgo Scala Style Guide: Follow this guide to maintain consistency and readability in your Scala code.\nNote: The public interfaces of these libraries are subject to change."
    }
  ],
  "qa_pairs": []
}