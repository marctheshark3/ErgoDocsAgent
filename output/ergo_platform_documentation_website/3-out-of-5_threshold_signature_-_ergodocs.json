{
  "title": "3-out-of-5 Threshold Signature - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/dev/scs/sigma/3-out-of-5/",
  "summary": "Let's say you want to create a ring spending contract, where any member of a group can make a transaction from the same address, but you do not want anyone else to know which specific member is spending the funds. This is not possible with Bitcoin. While Ethereum can achieve this, it would be expensive and complicated \u00e2\u0080\u0093 especially with a ring size of 10 or 20 members, which might be required for robust privacy. With Ergo, this kind of application can be created quickly, thanks to the integration of Sigma protocols in the core. This enables self-sovereign application-level privacy: trustless scripts that can be used to access mixers or other functionality without requiring any third parties.",
  "keywords": [
    "ring",
    "spending",
    "contract",
    "member",
    "group",
    "transaction",
    "address",
    "fund",
    "bitcoin",
    "ethereum",
    "size",
    "privacy",
    "ergo",
    "kind",
    "application",
    "thank",
    "integration",
    "sigma",
    "protocol",
    "core",
    "self",
    "level",
    "trustless",
    "script",
    "mixer",
    "functionality",
    "party",
    "example",
    "threshold",
    "signature",
    "ergs",
    "protection",
    "introduction"
  ],
  "sections": [
    {
      "heading": "3-out-of-5 Threshold Signature#",
      "content": "Let's say you want to create a ring spending contract, where any member of a group can make a transaction from the same address, but you do not want anyone else to know which specific member is spending the funds. This is not possible with Bitcoin. While Ethereum can achieve this, it would be expensive and complicated \u00e2\u0080\u0093 especially with a ring size of 10 or 20 members, which might be required for robust privacy.\nWith Ergo, this kind of application can be created quickly, thanks to the integration of Sigma protocols in the core. This enables self-sovereign application-level privacy: trustless scripts that can be used to access mixers or other functionality without requiring any third parties.\nval ringScript = s\"\"\"\n{\natLeast(\n  3, \n  Coll(\n    PK(\"9f8ZQt1Sue6W5ACdMSPRzsHj3jjiZkbYy3CEtB4BisxEyk4RsNk\"), \n    PK(\"9hFWPyhCJcw4KQyCGu4yAGfC1ieRAKyFg24FKjLJK2uDgA873uq\"), \n    PK(\"9fdVP2jca1e5nCTT6q9ijZLssGj6v4juY8gEAxUhp7YTuSsLspS\"), \n    PK(\"9gAKeRu1W4Dh6adWXnnYmfqjCTnxnSMtym2LPPMPErCkusCd6F3\"),\n    PK(\"9gmNsqrqdSppLUBqg2UzREmmivgqh1r3jmNcLAc53hk3YCvAGWE\")\n  )\n)\n}\nThe above is an example of a 3-out-of-5 threshold signature script, which can be compiled to a Pay-to-Script (P2S) address.\nSending Ergs to the resulting address locks them under the protection of this threshold signature contract.\nHere is a good introduction to making a signature."
    }
  ],
  "qa_pairs": []
}