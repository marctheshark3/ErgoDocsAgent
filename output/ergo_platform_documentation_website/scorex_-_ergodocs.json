{
  "title": "scorex - ErgoDocs",
  "source_url": "https://docs.ergoplatform.com/node/conf/conf-scorex/",
  "summary": "The scorex.network section allows you to configure settings related to the P2P network. By using the declaredAddress parameter, you can establish the external IP address and port number of the node. This is necessary for operating behind NAT in most cloud hosting scenarios where the machine doesn't directly interface with the external address. If left unspecified, your node will connect to the P2P network but won't accept incoming connections, meaning other nodes can't connect. Other nodes connect to your node using these settings.",
  "keywords": [
    "scorex.network",
    "section",
    "setting",
    "network",
    "parameter",
    "address",
    "port",
    "number",
    "node",
    "cloud",
    "scenario",
    "machine",
    "connection",
    "format",
    "address]:[port",
    "bindaddress",
    "interface",
    "ergo",
    "default",
    "0.0.0.0",
    "adapter",
    "internet",
    "settings",
    "component",
    "colon",
    "application",
    "name",
    "participant",
    "handshake",
    "configuration",
    "knownpeer",
    "list",
    "bootstrap",
    "nodes",
    "initialization",
    "time",
    "span",
    "millisecond",
    "duration",
    "unit",
    "value",
    "second",
    "minute",
    "hour",
    "example",
    "usage",
    "file",
    "maxconnections",
    "communication",
    "timeout",
    "handshaketimeout",
    "period",
    "response",
    "peer",
    "upnp",
    "home",
    "router",
    "tunnel",
    "functionality",
    "executioncontext",
    "test",
    "execution",
    "context",
    "scorex",
    "type",
    "dispatcher",
    "executor",
    "thread",
    "pool",
    "size",
    "maximum",
    "throughput",
    "datadir",
    "logdir",
    "directory",
    "datum",
    "case",
    "user",
    "location",
    "data",
    "rest",
    "apikeyhash",
    "blake2b256",
    "hash",
    "string",
    "corsallowedorigin",
    "cors",
    "support",
    "origin",
    "request",
    "processing",
    "publicurl",
    "firewall",
    "nodename",
    "version",
    "appversion",
    "agent",
    "agentname",
    "bind",
    "magic",
    "byte",
    "magicbytes",
    "protocol",
    "server",
    "synchronization",
    "updateevery"
  ],
  "sections": [
    {
      "heading": "Network Settings#",
      "content": "The scorex.network section allows you to configure settings related to the P2P network.\nBy using the declaredAddress parameter, you can establish the external IP address and port number of the node. This is necessary for operating behind NAT in most cloud hosting scenarios where the machine doesn't directly interface with the external address. If left unspecified, your node will connect to the P2P network but won't accept incoming connections, meaning other nodes can't connect. Other nodes connect to your node using these settings. The format for this parameter is \"[ip-address]:[port]\".\nYou can use the bindAddress parameter to set the IP address of the local network interface where the Ergo Node will accept incoming connections. By default, the node binds to \"0.0.0.0\", indicating it will listen on all available network adapters.\nAbout Internet Address Settings\nInternet Address settings follow the \":\" format. Note that the \"\" component after the colon is crucial.\nFor the bindAddress setting, the port component is used to establish the network port number to which other Ergo nodes will connect. Please ensure that this port is externally accessible; otherwise, your node will only establish outgoing connections to the P2P network. If the specified port is already occupied by another application, your node won't start.\nYou can use the nodeName parameter to assign a visible name to your node for other participants of the P2P network. This name is transmitted during the initial handshake. In the default configuration, this parameter is commented out, resulting in a randomly generated name.\nThe knownPeers parameter stores a list of bootstrap nodes that your node will connect to upon initialization.\nAbout Time Settings\nAll time span parameters are set in milliseconds. However, you can use duration units to shorten their values. The supported units include:\n* s, second, seconds\n* m, minute, minutes\n* h, hour, hours\n* d, day, days\nFor examples of usage, refer to the default co..."
    },
    {
      "heading": "Execution Context#",
      "content": "The executionContext configuration section is used for tests. It specifies settings for the execution context that Scorex uses.\nexecutionContext {\n    type = Dispatcher\n    executor = \"thread-pool-executor\"\n    thread-pool-executor {\n      fixed-pool-size = 16\n    }\n    throughput = 1\n}\nThe type is set to \"Dispatcher\", and the executor to \"thread-pool-executor\". The fixed-pool-size under thread-pool-executor is set to 16, indicating that a maximum of 16 threads will be used for execution. The throughput setting is set to 1."
    },
    {
      "heading": "Data and Log Directory#",
      "content": "dataDir = ${user.home}\"/scorex\"\nlogDir = ${scorex.dataDir}\"/log\"\n\nThe dataDir setting determines the directory where the Scorex data will be stored, in this case, it is set to a \"scorex\" directory in the user's home directory. The logDir setting sets the location of the log files, which is a \"log\" directory within the Scorex data directory."
    },
    {
      "heading": "REST API#",
      "content": "restApi {\n    bindAddress = \"0.0.0.0:9052\"\n    apiKeyHash = \"324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf\"\n    corsAllowedOrigin = \"*\"\n    timeout = 5s\n    publicUrl = \"https://example.com:80\"\n}\nThe bindAddress sets the network address to which the REST API binds. apiKeyHash is the hex-encoded Blake2b256 hash of the API key, in this case, it is the hash of the string \"hello\". corsAllowedOrigin is set to \"*\" to enable CORS support from all origins. timeout is the request processing timeout, and publicUrl is a publicly accessible URL if a node that exposes REST API in the firewall."
    },
    {
      "heading": "Network Configuration#",
      "content": "network {\n    nodeName = \"ergo-node\"\n    appVersion = 5.0.1\n    agentName = \"ergoref\"\n    bindAddress = \"0.0.0.0:9022\"\n    magicBytes = [2, 2, 2, 2]\n    // declaredAddress details omitted for brevity...\n    upnpEnabled = no\n    localOnly = false\n    upnp-gateway-timeout = 7s\n    upnp-discover-timeout = 3s\n    addedMaxDelay = 0ms\n    handshakeTimeout = 30s\n    knownPeers = []\n    getPeersInterval = 2m\n    maxConnections = 30\n    connectionTimeout = 1s\n    peerEvictionInterval = 1h\n    // More settings omitted for brevity...\n}\nThe network configuration section contains numerous settings related to the P2P network, such as node name (nodeName), application version (appVersion), agent name (agentName), network bind address (bindAddress), magic bytes (magicBytes), UPnP settings, and more."
    },
    {
      "heading": "NTP Configuration#",
      "content": "ntp {\n    server = \"pool.ntp.org\"\n    updateEvery = 30m\n    timeout = 30s\n}\nThe ntp configuration section specifies the Network Time Protocol (NTP) server to use for time synchronization (server), how frequently to update the time (updateEvery), and the timeout\nfor server responses (timeout)."
    }
  ],
  "qa_pairs": []
}