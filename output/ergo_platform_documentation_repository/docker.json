{
  "title": "Docker",
  "source_url": "docs/node/install/docker.md",
  "summary": "# Docker\n\nTo run the latest Ergo version in mainnet as a console application with logs printed to console:\n\n\n```bash\nsudo docker run --rm -p 9030:9030 -p 127.0.0.1:9053:9053 -v /path/on/host/to/ergo/data:/home/ergo/.ergo ergoplatform/ergo --mainnet\n```\nThis will connect to Ergo mainnet with default config and open port 9030 globally and 9053 locally on the host system. All data will be stored in your host directory `/path/on/host/to/ergo/data`.",
  "keywords": [
    "docker",
    "ergo",
    "version",
    "mainnet",
    "console",
    "application",
    "bash",
    "--rm",
    "/path",
    "host",
    "data:/home",
    "ergoplatform",
    "--mainnet",
    "default",
    "config",
    "port",
    "system",
    "datum",
    "directory",
    "data",
    "compose",
    "yaml",
    "service",
    "node",
    "image",
    "container_name",
    "command",
    "volume",
    "./.ergo:/home",
    "ergo/.ergo",
    "./ergo.conf:/etc",
    "restart",
    "heap",
    "value",
    "environment",
    "max_heap=4",
    "option",
    "size",
    "file",
    ".ergo",
    "group",
    "name",
    "memory",
    "usage",
    "custom",
    "myergo.conf",
    "sudo",
    "myergo.conf:/etc",
    "ergo:<version",
    "page](https://hub.docker.com",
    "example",
    "v4.0.23",
    "testnet",
    "configuration",
    "network",
    "flag",
    "--<networkid",
    "max_heap",
    "variable",
    "consume",
    "communication",
    "rest",
    "permission",
    "owner",
    "numeric",
    "container",
    "user",
    "dockerfile",
    "connection",
    "practice",
    "case"
  ],
  "sections": [
    {
      "heading": "Docker",
      "content": "To run the latest Ergo version in mainnet as a console application with logs printed to console:\nbash\nsudo docker run --rm -p 9030:9030 -p 127.0.0.1:9053:9053 -v /path/on/host/to/ergo/data:/home/ergo/.ergo ergoplatform/ergo --mainnet\nThis will connect to Ergo mainnet with default config and open port 9030 globally and 9053 locally on the host system.\nAll data will be stored in your host directory /path/on/host/to/ergo/data."
    },
    {
      "heading": "Docker Compose",
      "content": "```yaml\nversion: \"3.8\"\nservices:\n  # Ergo blockchain node\n  node:\n    image: ergoplatform/ergo\n    container_name: mn-ergo-node\n    command: --mainnet -c /etc/ergo.conf\n    volumes:\n      - ./.ergo:/home/ergo/.ergo\n      - ./ergo.conf:/etc/ergo.conf:ro\n    ports:\n      - 9053:9053\n      - 9030:9030\n    restart: unless-stopped\n    # Increase or decrease the max heap value as required\n    environment:\n        - MAX_HEAP=4G\n    logging:\n      options:\n        max-size: \"10m\"\n        max-file: \"3\"\n```\nRun the node with\nbash\ndocker-compose up -d\nFollow the logs with\nbash\ndocker logs -f ergo-mainnet -n 200\nNote that the node's data will be saved in .ergo directory you must create beforehand and change its group :\nbash\nchown -R 9052:9052 .ergo\nYour config file must be in the same directory with name ergo.conf\nThis will also limit the memory usage of node to 1400MB and cpu to 40%."
    },
    {
      "heading": "Running other versions",
      "content": "To run specific Ergo version <VERSION> as a service with custom config /path/on/host/system/to/myergo.conf:\nbash\n    sudo docker run -d \\\n        -p 9030:9030 \\\n        -p 127.0.0.1:9053:9053 \\\n        -v /path/on/host/to/ergo/data:/home/ergo/.ergo \\\n        -v /path/on/host/system/to/myergo.conf:/etc/myergo.conf \\\n        -e MAX_HEAP=4G \\\n        ergoplatform/ergo:<VERSION> --<networkId> -c /etc/myergo.conf\nAvailable versions can be found on Ergo Docker image page, for example, v4.0.23.\nThis will connect to the Ergo mainnet or testnet following your configuration passed in myergo.conf and network flag --<networkId>. Every default config value would be overwritten with corresponding value in myergo.conf. MAX_HEAP variable can be used to control how much memory can the node consume.\nThis command also would store your data in /path/on/host/to/ergo/data on host system, and open ports 9030 (node communication) globally and 9053 (REST API) locally on host system. The /path/on/host/to/ergo/data directory must has 777 permissions or has owner/group numeric id equal to 9052 to be writable by container, as ergo user inside Docker image (please refer to Dockerfile).\nErgo node works normally behind NAT, so you can keep closed your 9030 port, hence other nodes could not discover and connect to yours one, only your node could initiate connections.\nIt is also a good practice to keep closed REST API port 9053, and connect to your node from inside another container in the same Docker network (this case not covered by this short quick start manual)."
    }
  ],
  "qa_pairs": []
}