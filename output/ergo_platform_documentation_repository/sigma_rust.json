{
  "title": "Sigma Rust",
  "source_url": "docs/dev/stack/sigma-rust.md",
  "summary": "---\ntags:\n  - Rust\n  - SigmaRust\n  - Bindings\n  - Wasm\n  - JavaScript\n  - TypeScript\n  - Swift\n  - iOS\n  - Java\n  - JVM\n  - C\n  - Go\n  - Ruby\n  - Python\n---\n\n# Sigma Rust\n\nRust implementation of [ErgoScript (sigmastate-interpreter)](sigmastate-interpreter.md) cryptocurrency scripting language. ## Crates\n\n[ergo-lib](https://github.com/ergoplatform/sigma-rust/tree/develop/ergo-lib) [! [Latest Version](https://img.shields.io/crates/v/ergo-lib.svg)](https://crates.io/crates/ergo-lib) [![Documentation](https://docs.rs/ergo-lib/badge.svg)](https://docs.rs/crate/ergo-lib)\n\nOverarching crate exposing wallet-related features: chain types (transactions, boxes, etc.), JSON serialization, box selection for tx inputs, tx builder and signing.",
  "keywords": [
    "rust",
    "sigmarust",
    "bindings",
    "wasm",
    "javascript",
    "typescript",
    "java",
    "ruby",
    "python",
    "sigma",
    "implementation",
    "ergoscript",
    "sigmastate",
    "cryptocurrency",
    "scripting",
    "language",
    "crates",
    "ergo",
    "tree",
    "version](https://img.shields.io",
    "lib.svg)](https://crates.io",
    "documentation](https://docs.rs",
    "badge.svg)](https://docs.rs",
    "crate",
    "wallet",
    "feature",
    "chain",
    "type",
    "transaction",
    "json",
    "serialization",
    "selection",
    "input",
    "builder",
    "signing",
    "export",
    "interpreter](https://github.com",
    "ergoplatform",
    "interpreter",
    "ergotree",
    "interpreter.svg)](https://crates.io",
    "ir](https://github.com",
    "ir.svg)](https://crates.io",
    "compiler](https://github.com",
    "compiler",
    "compiler.svg)](https://crates.io",
    "ser.svg)](https://crates.io",
    "primitive",
    "binding",
    "section",
    "developer",
    "blockchain",
    "programming",
    "wasm`](https://github.com",
    "wasm.svg)](https://crates.io",
    "browser",
    "browser`](https://github.com",
    "package",
    "node.js",
    "nodejs`](https://github.com",
    "swift",
    "repo",
    "jni`](https://github.com",
    "jni.svg)](https://crates.io",
    "c`](https://github.com",
    "c.svg)](https://crates.io",
    "go`](https://github.com",
    "reference](https://pkg.go.dev",
    "badge",
    "go.svg)](https://pkg.go.dev",
    "note",
    "community",
    "sigma_rb`](https://github.com",
    "thedlop",
    "sigma_rb",
    "version](https://badge.fury.io",
    "sigma_rb.svg)](https://badge.fury.io",
    "python`](https://github.com",
    "pypi",
    "lib.svg)](https://badge.fury.io",
    "uses",
    "docs](ergo",
    "python.md",
    "usage",
    "example",
    "understanding",
    "project",
    "oracle",
    "core](https://github.com",
    "core",
    "headless",
    "dapp",
    "framework](https://github.com",
    "emurgo",
    "framework",
    "node",
    "interface",
    "library](https://github.com",
    "spectrum",
    "services",
    "ergo](https://github.com",
    "finance",
    "offchain",
    "ageusd",
    "stablecoin",
    "protocol](https://github.com",
    "ergonames",
    "sdks](https://github.com",
    "ergoname",
    "master",
    "sdk](https://github.com",
    "ergolab",
    "yoroi",
    "wallet](https://github.com",
    "frontend",
    "desktop",
    "ergowallet",
    "create",
    "demo",
    "address",
    "generation",
    "look",
    "test",
    "scenario"
  ],
  "sections": [
    {
      "heading": "Sigma Rust",
      "content": "Rust implementation of ErgoScript (sigmastate-interpreter) cryptocurrency scripting language."
    },
    {
      "heading": "Crates",
      "content": "ergo-lib\nOverarching crate exposing wallet-related features: chain types (transactions, boxes, etc.), JSON serialization, box selection for tx inputs, tx builder and signing. Exports other crates API, probably the only crate you'd need to import.\nergotree-interpreter\nErgoTree interpreter\nergotree-ir\nErgoTree IR and serialization.\nergoscript-compiler\nErgoScript compiler.\nsigma-ser\nErgo binary serialization primitives."
    },
    {
      "heading": "Bindings",
      "content": "This section lists available language bindings for sigma-rust, allowing developers to interact with the Ergo blockchain using various programming languages.\nWasm:\nCrate: ergo-lib-wasm  \n\n\nJavaScript / TypeScript:\nBrowser: ergo-lib-wasm-browser \nNode.js: ergo-lib-wasm-nodejs \n\n\nSwift (iOS):\nRepo: ergo-lib-ios\n\n\nJava / JVM:\nRepo: ergo-lib-jni  \n\n\nC:\nRepo: ergo-lib-c  \n\n\nGo:\nRepo: ergo-lib-go  (Note: Community maintained)\n\n\nRuby:\nRepo: sigma_rb  (Note: Community maintained)\n\n\nPython:\nPackage: ergo-lib-python   (Note: Uses ergo-lib crate docs)\nSee also: ergo-lib-python docs"
    },
    {
      "heading": "Usage Examples",
      "content": "To get better understanding on how to use it in your project check out how its being used in the following projects:\nRust:\nOracle Core;\nErgo Headless dApp Framework;\nErgo Node Interface Library;\nSpectrum Off-Chain Services for Ergo;\nAgeUSD Stablecoin Protocol;\nErgoNames SDKs\nTS/JS:\nErgo SDK (Wasm bindings);\nYoroi wallet (Wasm bindings);\nErgo Desktop Wallet (Wasm bindings);\nExamples:\nCreate transaction demo (TS)\nAddress generation demo (TS)\nAlso take a look at tests where various usage scenarios were implemented."
    }
  ],
  "qa_pairs": []
}