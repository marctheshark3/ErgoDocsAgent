{
  "title": "Just-In-Time Costing",
  "source_url": "docs/node/jitc.md",
  "summary": "---\ntags:\n  - JITC\n  - Just-In-Time Costing\n  - AOTC\n  - Node\n  - Performance\n  - Scalability\n  - EIP-39\n---\n\n# Just-In-Time Costing\n\nDiscussions about transaction efficiency, scalability, and costing are common in the cryptocurrency space. For a blockchain technology to achieve long-term viability and widespread adoption, adaptability and scalability are crucial. Ergo's Protocol Reference Client 5.0.0 introduced significant advancements, offering substantial benefits to miners, developers, and users across the ecosystem, particularly regarding script execution costing. If you are new to blockchain, terms like scalability and costing might seem complex. **Scalability** refers to a blockchain's capacity to handle an increasing number of transactions.",
  "keywords": [
    "jitc",
    "time",
    "costing",
    "aotc",
    "node",
    "performance",
    "scalability",
    "eip-39",
    "discussion",
    "transaction",
    "efficiency",
    "cryptocurrency",
    "space",
    "technology",
    "term",
    "viability",
    "adoption",
    "adaptability",
    "ergo",
    "protocol",
    "reference",
    "client",
    "5.0.0",
    "advancement",
    "benefit",
    "miner",
    "developer",
    "user",
    "ecosystem",
    "script",
    "execution",
    "blockchain",
    "capacity",
    "number",
    "platform",
    "volume",
    "scaling",
    "mechanism",
    "network",
    "confirmation",
    "expense",
    "contract",
    "proof",
    "work",
    "cost",
    "ahead",
    "method",
    "version",
    "resource",
    "hybrid",
    "release",
    "improvement",
    "model",
    "ergoplatform",
    "experience",
    "processing",
    "block",
    "explanation",
    "blog",
    "post",
    "counting",
    "costs](https://ergoplatform.org",
    "blog/2022",
    "ergos",
    "stage",
    "validation",
    "reduction",
    "input",
    "guarding",
    "ergotree",
    "sigma",
    "proposition",
    "condition",
    "provedlog(pk",
    "atleast(2",
    "coll(pk1",
    "phase",
    "operation",
    "verification",
    "signature",
    "check",
    "budget",
    "denial",
    "service",
    "attack",
    "measure",
    "part",
    "estimation",
    "result",
    "utilization",
    "throughput",
    "detail",
    "github",
    "page](https://github.com",
    "v5.0.0",
    "information",
    "interpreter",
    "testnet",
    "setting",
    "implementation"
  ],
  "sections": [
    {
      "heading": "Just-In-Time Costing",
      "content": "Discussions about transaction efficiency, scalability, and costing are common in the cryptocurrency space. For a blockchain technology to achieve long-term viability and widespread adoption, adaptability and scalability are crucial. Ergo's Protocol Reference Client 5.0.0 introduced significant advancements, offering substantial benefits to miners, developers, and users across the ecosystem, particularly regarding script execution costing.\nIf you are new to blockchain, terms like scalability and costing might seem complex. Scalability refers to a blockchain's capacity to handle an increasing number of transactions. As a platform grows, transaction volume typically increases. Without effective scaling mechanisms, the network can become congested, leading to longer confirmation times. Costing refers to the computational expense associated with validating transactions and smart contracts. In Proof-of-Work blockchains like Ergo, every transaction incurs a fee, partly determined by its computational cost. Historically, this cost has been estimated using either Ahead-of-Time (AOT) or Just-In-Time (JIT) methods. Until version 5.0.0, Ergo primarily used AOT costing, which estimates costs before script execution to prevent excessively resource-intensive scripts from overwhelming the network."
    },
    {
      "heading": "Ergo Protocol Reference Client 5.0.0 and Hybrid Costing",
      "content": "The release of Reference Client 5.0.0 introduced several network improvements, including a more efficient hybrid costing model (EIP-39). This enhances the network's user experience (UX) by allowing more efficient transaction processing within blocks, benefiting miners, developers, and users.\nAs mentioned, Ergo previously relied mainly on AOT costing. Reference Client 5.0.0 introduced a hybrid model combining AOT and JIT costing. For a detailed explanation, refer to the blog post: \"Ergo's Hybrid Method for Counting Costs\".\nThe hybrid costing model operates in two stages during transaction validation:\nReduction Stage (JIT Costing): Each input's guarding script (ErgoTree) is reduced to its final sigma proposition (a cryptographic condition like proveDlog(pk) or atLeast(2, Coll(pk1, pk2, pk3))). The cost of this reduction phase is calculated using Just-In-Time (JIT) costing, meaning the cost is determined based on the actual operations performed during reduction.\nCryptographic Verification Stage (AOT Costing): Once all input scripts are reduced to sigma propositions, the cost of verifying the required cryptographic proofs (e.g., signature checks) is calculated using Ahead-of-Time (AOT) costing. AOT costing for crypto operations is simple, fast, and predictable.\nThe costs from both stages are aggregated to determine the final cost of the transaction. This transaction cost is then added to the cumulative cost of the block being validated. A block is only valid if its total accumulated cost remains within the maximum allowed block budget.\nCryptographic operations are significantly more resource-intensive than reduction operations, typically consuming around 80% of the verification time. Using AOT costing for the cryptographic stage ensures that denial-of-service attacks based on expensive crypto operations remain infeasible. The JIT costing applied during the reduction stage provides a more accurate measure of the actual computational work performed during script execution..."
    }
  ],
  "qa_pairs": []
}