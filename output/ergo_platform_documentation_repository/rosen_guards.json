{
  "title": "Rosen Guards",
  "source_url": "docs/eco/rosen/rosen-guard.md",
  "summary": "# Rosen Guards\n\nRosen is an Ergo-centric bridge fortified with multi-layered security protection. In the initial layer, [Watchers](watcher.md) monitor network activities and report valid bridge-related events to the subsequent layer, Guards. These Guards then carefully process the reported events and execute required actions. In brief, Guards are dedicated to security maintenance and executing responses, while Watchers are focused on the ongoing monitoring of activities and transparent reporting. Guards are a federated group of entities managing the Rosen core.",
  "keywords": [
    "rosen",
    "guards",
    "ergo",
    "bridge",
    "security",
    "protection",
    "layer",
    "watchers](watcher.md",
    "network",
    "activity",
    "event",
    "guard",
    "action",
    "brief",
    "maintenance",
    "response",
    "watcher",
    "monitoring",
    "reporting",
    "group",
    "entity",
    "core",
    "authority",
    "contract",
    "wallet",
    "failure",
    "collusion",
    "majority",
    "amount",
    "fund",
    "collateral",
    "case",
    "behaviour",
    "watchers",
    "transfer",
    "behavior",
    "emission",
    "token",
    "benefit",
    "project",
    "detail",
    "type",
    "info",
    "effort",
    "permission",
    "admission",
    "stake",
    "misconduct",
    "inactivity",
    "transaction",
    "target",
    "blockchain",
    "service",
    "submission",
    "processing",
    "scanner",
    "extractor",
    "system",
    "datum",
    "component",
    "block",
    "pattern",
    "processor",
    "authenticity",
    "relevance",
    "process",
    "check",
    "rule",
    "condition",
    "operation",
    "agreement",
    "execution",
    "txagreement",
    "consensus",
    "movement",
    "value",
    "mechanism",
    "node",
    "participant",
    "signal",
    "asset",
    "chain",
    "multisig",
    "threshold",
    "signature",
    "scheme",
    "multi",
    "trustworthiness",
    "subset",
    "interaction",
    "basechain",
    "reward",
    "services",
    "payment",
    "cardano",
    "format",
    "protocol",
    "requirement",
    "confirmation",
    "finalization",
    "number",
    "follow",
    "notification",
    "summary",
    "detection"
  ],
  "sections": [
    {
      "heading": "Rosen Guards",
      "content": "Rosen is an Ergo-centric bridge fortified with multi-layered security protection. In the initial layer, Watchers monitor network activities and report valid bridge-related events to the subsequent layer, Guards. These Guards then carefully process the reported events and execute required actions. In brief, Guards are dedicated to security maintenance and executing responses, while Watchers are focused on the ongoing monitoring of activities and transparent reporting.\nGuards are a federated group of entities managing the Rosen core. Their authority over Rosen is restricted through multisignature contracts and wallets. Failure or collusion of Guards will be tolerated while the majority of Guards are healthy. Each Guard has a reasonable amount of funds locked as collateral and will lose all their funds at once in case of malicious behaviour.\nGuards need to lock RSN as collateral. Funds will be emitted to the Guard Set and involved Watchers in case of any successful bridge transfers. However, funds will be slashed/collected in case of malicious behavior. When RSN emission has ended, all bridge fees will be collected in the RSN token. Holding RSN will have special fee benefits for projects.\n/// details | Who can become a Guard?\n     {type: info, open: false}\nBecoming a guard is effort-intensive and permission-based, starting with selected known entities and later admissions by the guard set. Guards buy and lock RSN tokens in a multisig wallet, with stakes lost for misconduct or inactivity.\n///\n/// details | Who are the current Guards?\n     {type: info, open: false}\nThe Guard Set can be seen on rosen.tech\n///"
    },
    {
      "heading": "How are transactions submitted to the target blockchain.",
      "content": "The Rosen Bridge Guard Service facilitates transaction submissions across different blockchains. Here's how transactions are submitted to the target blockchain within this service:\nEvent Processing:\n\nScanner & Extractor: The system includes a blockchain scanner and data extractor that monitor the Ergo blockchain and Rosen Bridge for relevant events. These components fetch new blocks, looking for specific transaction patterns or events that need to be acted upon.\nEvent Processor: Each event detected by the extractor is processed to verify its authenticity and relevance. This process includes checks against predefined rules and conditions specific to the blockchain operations being monitored.\n\n\n\nTransaction Agreement and Execution:\n\nTxAgreement: For actions that require consensus or agreement (like cross-chain movements involving significant value), the Guard Service utilizes a multi-guard consensus mechanism. Each guard node (participant in the Rosen Bridge Guard network) independently verifies the transaction details and signals agreement.\nTransaction Processor: Once consensus is reached, the Transaction Processor crafts the necessary blockchain transaction. This component is responsible for creating a valid and secure transaction that represents the agreed-upon action (like transferring assets between chains).\nMultiSig & TSS (Threshold Signature Scheme): The final transaction is signed using multi-signature and threshold signature schemes to ensure security and trustworthiness. These cryptographic schemes help in securing transactions by requiring multiple signatures or a subset of signatures from a larger set to authorize a transaction.\n\n\n\nBlockchain Interaction:\n\nBaseChain and Reward Services: These services handle the actual interaction with the blockchain. They generate and verify payment transactions, interacting directly with the blockchain to submit the signed transactions.\nThe services are designed to be flexible enough to support various blockchains (like ..."
    }
  ],
  "qa_pairs": []
}