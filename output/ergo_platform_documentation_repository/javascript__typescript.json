{
  "title": "JavaScript & TypeScript",
  "source_url": "docs/dev/lang/js.md",
  "summary": "---\ntags:\n  - JavaScript\n  - TypeScript\n---\n\n# JavaScript & TypeScript\n\nJavaScript and TypeScript developers can interact with the Ergo blockchain using various libraries and frameworks. Notably, [JS/TS bindings for sigma-rust](sigma-rust.md#bindings) (via WebAssembly) provide core blockchain interaction capabilities. [Appkit](appkit.md) was designed as an abstraction layer on top of [Sigma](sigmastate-interpreter.md). This gives a lot of freedom on the core level in Sigma, while keeping [dApp-facing APIs](api.md) stable. With the availability of [Sigma.js](sigmajs.md), [Fleet](fleet.md) can play the same role for JS/TS.\n\n\n\n## Frameworks\n\n::cards::",
  "keywords": [
    "javascript",
    "typescript",
    "developer",
    "ergo",
    "blockchain",
    "library",
    "framework",
    "binding",
    "sigma",
    "rust](sigma",
    "rust.md#bindings",
    "webassembly",
    "core",
    "interaction",
    "capability",
    "abstraction",
    "layer",
    "freedom",
    "level",
    "dapp",
    "apis](api.md",
    "availability",
    "sigma.js](sigmajs.md",
    "fleet](fleet.md",
    "role",
    "card",
    "title",
    "fleet",
    "content",
    "transactions](transactions.md",
    "/stack",
    "fleet.md",
    "port",
    "sigmastate",
    "interpreter",
    "sigmajs.md",
    "graalvm",
    "appkit.md",
    "rust",
    "wasm",
    "tutorial",
    "dappstep",
    "docs",
    "example",
    "nodejs",
    "aspect",
    "functionality](get",
    "started.md",
    "development",
    "course",
    "video",
    "nightowl",
    "connector](dapp.md",
    "react",
    "package",
    "address",
    "generation",
    "demo",
    "transaction",
    "resource",
    "raffle",
    "bot](https://github.com",
    "zkastn",
    "github",
    "ergoscript.js](https://www.youtube.com",
    "watch?v=_jwmi8m_vrs",
    "documentation](https://github.com",
    "ergoraffle",
    "documentation",
    "description",
    "implementation",
    "hypo10use",
    "quid",
    "games](https://github.com",
    "game",
    "angular"
  ],
  "sections": [
    {
      "heading": "JavaScript & TypeScript",
      "content": "JavaScript and TypeScript developers can interact with the Ergo blockchain using various libraries and frameworks. Notably, JS/TS bindings for sigma-rust (via WebAssembly) provide core blockchain interaction capabilities.\nAppkit was designed as an abstraction layer on top of Sigma. This gives a lot of freedom on the core level in Sigma, while keeping dApp-facing APIs stable.\nWith the availability of Sigma.js, Fleet can play the same role for JS/TS."
    },
    {
      "heading": "Frameworks",
      "content": "::cards::\n[\n  {\n    \"title\": \"Fleet\",\n    \"content\": \"Lets you easily create Ergo transactions with a pure JS library.\",\n    \"url\": \"../stack/fleet.md\"\n  },\n  {\n    \"title\": \"Sigma.JS\",\n    \"content\": \"JavaScript port of the sigmastate-interpreter\",\n    \"url\": \"../lib/sigmajs.md\"\n  },\n  {\n    \"title\": \"AppKit\",\n    \"content\": \"can be configured to run JavaScript under GraalVM\",\n    \"url\": \"../stack/appkit.md\"\n  },\n  {\n    \"title\": \"sigma-rust (via WASM)\",\n    \"content\": \"Core Rust library with JS/TS bindings available via WebAssembly.\",\n    \"url\": \"../stack/sigma-rust.md#bindings\"\n  }\n]\n::/cards::"
    },
    {
      "heading": "Tutorials",
      "content": "::cards::\n[\n  {\n    \"title\": \"\ud83d\udd17 dAppStep Docs\",\n    \"content\": \"include many practical examples with Javascript and Nodejs that will help you to understand to implement different aspects of dapp functionality on Ergo\",\n    \"url\": \"https://www.dappstep.com/\"\n  },\n  {\n    \"title\": \"\ud83d\udd17 dApp Development Course\",\n    \"content\": \"\",\n    \"url\": \"https://www.youtube.com/watch?v=uC6QO3I4m8o&list=PLzY-irO3z3G8FVDifned2NMFc-PgQqnny\"\n  },\n  {\n    \"title\": \"\ud83d\udcf9 Video Tutorial\",\n    \"content\": \"NightOwl dApp Connector React Package\",\n    \"url\": \"https://twitter.com/NightOwlCasino/status/1529452399475179520\"\n  },\n  {\n    \"title\": \"Address Generation Demo\",\n    \"content\": \"using sigma-rust and TypeScript\",\n    \"url\": \"https://github.com/ergoplatform/sigma-rust/blob/develop/bindings/ergo-lib-wasm/examples/address-generation-demo/README.md\"\n  },\n  {\n    \"title\": \"Create Transaction Demo\",\n    \"content\": \"using sigma-rust and TypeScript\",\n    \"url\": \"https://github.com/ergoplatform/sigma-rust/blob/develop/bindings/ergo-lib-wasm/examples/create-transaction-demo/README.md\"\n  },\n]\n::/cards::"
    },
    {
      "heading": "Resources",
      "content": "Ergo-Raffle-Bot Github\nErgoScript.js\nThe Ergo Raffle documentation provides a detailed description of their implementation. \nhypo10use/quid-games (Angular)"
    }
  ],
  "qa_pairs": []
}