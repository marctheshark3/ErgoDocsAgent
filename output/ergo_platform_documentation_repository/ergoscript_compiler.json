{
  "title": "ErgoScript Compiler",
  "source_url": "docs/dev/stack/compiler.md",
  "summary": "# ErgoScript Compiler\n\nThe [ErgoScript Compiler](https://github.com/ergoplatform/ergoscript-compiler) is a Command Line Interface (CLI) tool designed to compile ErgoScript code into an Ergo address.\n\n## User Guide\n\n### Setup and Compilation\n\n1. If you're starting from source, compile the ErgoScript compiler using these steps:\n    - Clone the repository by executing `git clone https://github.com/scalahub/ErgoScriptCompiler.git`. - Make sure SBT is installed and correctly set up in your path. - Use the command `sbt assembly` in the project root folder to compile the JAR file. Upon successful compilation, a JAR file is generated in the following path: `target/scala-2.12/ErgoScriptCompiler-assembly-0.1.jar`.",
  "keywords": [
    "ergoscript",
    "compiler",
    "compiler](https://github.com",
    "command",
    "line",
    "interface",
    "tool",
    "code",
    "ergo",
    "address",
    "user",
    "guide",
    "setup",
    "compilation",
    "source",
    "step",
    "repository",
    "clone",
    "https://github.com/scalahub/ergoscriptcompiler.git",
    "path",
    "assembly",
    "project",
    "root",
    "folder",
    "file",
    "target",
    "scala-2.12",
    "ergoscriptcompiler",
    "jarfile",
    "text",
    "example",
    "myscript.es",
    "extension",
    "symbol",
    "constant",
    "instance",
    "mysymbols.json",
    "section",
    "java",
    "compile",
    "ergoscriptcompiler.jar",
    "refer",
    "sample",
    "output",
    "integration",
    "following",
    "build.sbt",
    "librarydependencie",
    "io.github.ergoplatform",
    "util",
    "compiler.compile(ergoscriptfile",
    "string",
    "symbolsfile",
    "option[string",
    "outputs",
    "test",
    "resource",
    "directory",
    "execution",
    "assembly-0.1.jar",
    "ageusd.es",
    "ageusd_symbols.json",
    "ergotree",
    "script",
    "blake2b256",
    "hash",
    "format",
    "reference",
    "value",
    "json",
    "value\":\"0fb1eca4646950743bc5a8c341c16871a0ad9b4077e3b276bf93855d51a042d1",
    "name\":\"epochprepscripthash",
    "value\":\"d998e06e0c093b0990fa3da4f3bea4364546803551ea9cac02623e9675ba4522",
    "name\":\"buffer",
    "type\":\"int",
    "value\":\"4",
    "generate",
    "payment",
    "request",
    "form",
    "client",
    "rest",
    "integer",
    "register",
    "humanrequest.json"
  ],
  "sections": [
    {
      "heading": "ErgoScript Compiler",
      "content": "The ErgoScript Compiler is a Command Line Interface (CLI) tool designed to compile ErgoScript code into an Ergo address."
    },
    {
      "heading": "Setup and Compilation",
      "content": "If you're starting from source, compile the ErgoScript compiler using these steps:\n\nClone the repository by executing git clone https://github.com/scalahub/ErgoScriptCompiler.git.\nMake sure SBT is installed and correctly set up in your path.\nUse the command sbt assembly in the project root folder to compile the JAR file.\n\nUpon successful compilation, a JAR file is generated in the following path: target/scala-2.12/ErgoScriptCompiler-assembly-0.1.jar. In the steps below, <jarFile> refers to this JAR.\nIf you're using the precompiled JAR, proceed directly to the next step.\n\n\nCompiling ErgoScript code involves the following steps:\n\nSave your ErgoScript code in a text file, for example, myScript.es. You can choose any file extension.\nIf your code references any symbols (constants), save them in a separate file, for instance, mySymbols.json. Refer to the section below on how to write this file. \nThis symbols file is optional and is only required if your code references any symbols.\nUse the command java -cp <jarFile> Compile <ergoScriptFile> <optionalSymbolsFile> to compile the file. For example:\njava -cp ErgoScriptCompiler.jar Compile myScript.es mySymbols.json\njava -cp ErgoScriptCompiler.jar Compile myScript.es\nRefer to the example below for a sample output."
    },
    {
      "heading": "Integration in Your Project",
      "content": "To use ErgoScript Compiler in your project, add the following to your build.sbt:\nlibraryDependencies += \"io.github.ergoplatform\" %% \"ergoscriptcompiler\" % \"1.0\"\nThen call: util.Compiler.compile(ergoScriptFile: String,  symbolsFile: Option[String])"
    },
    {
      "heading": "Examples and Outputs",
      "content": "The src/test/resources directory contains sample ErgoScript and symbol files. Here's an example execution:\nbash\njava -cp \\\n      target/scala-2.12/ErgoScriptCompiler-assembly-0.1.jar \\\n      Compile \\\n      src/test/resources/AgeUSD.es \\\n      src/test/resources/AgeUSD_symbols.json\nThe output includes:\n1. The ErgoTree corresponding to the Script, serialized and hex-encoded.\n2. The Blake2b256 hash of the ErgoTree, hex-encoded.\n3. The address corresponding to the ErgoTree."
    },
    {
      "heading": "Symbol File Format",
      "content": "If your ErgoScript code references token IDs or script hashes, encode such values in a \"symbols\" file as follows (any file extension is permissible):\n```json\n{\n  \"symbols\":[\n    {\n      \"name\":\"poolTokenId\",\n      \"type\":\"CollByte\",\n      \"value\":\"0fb1eca4646950743bc5a8c341c16871a0ad9b4077e3b276bf93855d51a042d1\"\n    },\n    {\n      \"name\":\"epochPrepScriptHash\",\n      \"type\":\"CollByte\",\n      \"value\":\"d998e06e0c093b0990fa3da4f3bea4364546803551ea9cac02623e9675ba4522\"\n    },\n    {\n      \"name\":\"buffer\",\n      \"type\":\"Int\",\n      \"value\":\"4\"\n    }\n  ]\n}\n```"
    },
    {
      "heading": "Generating Payment Requests",
      "content": "Apart from compiling ErgoScript, this tool can generate a \"payment request\". It replaces register values from human-understandable forms to serialized-hex needed by the Ergo client's REST API. For instance, to store the integer 1, you would provide the register value as 0402.\nThe command to generate payment requests is: java -cp <jarFile> Payment <humanRequest.json> <symbolsFile.json>"
    }
  ],
  "qa_pairs": []
}