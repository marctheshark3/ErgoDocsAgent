{
  "title": "Running your Node over Tor",
  "source_url": "docs/node/tor.md",
  "summary": "---\ntags:\n  - Tor\n  - Node\n  - Privacy\n  - Anonymity\n  - Configuration\n---\n\n# Running your Node over Tor\n\n[Tor](https://www.torproject.org/download/tor/) is a network that helps anonymize your internet traffic by routing it through a series of volunteer-operated servers (relays). This guide explains how to configure your Ergo node to route its P2P network traffic through Tor.\n\n\nIf you have Tor installed and running (typically listening on `127.0.0.1:9050` for SOCKS proxy connections), you first need to ensure your node's P2P and API interfaces are bound to localhost in your `ergo.conf` file:\n\n```conf\nscorex.network.bindAddress = \"127.0.0.1:9030\"\nscorex.restApi.bindAddress = \"127.0.0.1:9053\"\n```\n\nWith Tor installed and running, and the configuration above set, you then launch the Ergo node using specific Java system properties (`-D`) to direct its outgoing network traffic through the Tor SOCKS proxy:\n\n```bash\njava -DsocksProxyHost=localhost -DsocksProxyPort=9050 -Xmx4G -jar ergo-*.jar --mainnet -c ergo.conf \n```\n\n# Example Configuration File\n\n```conf\nergo {\n    node {\n        mining = false\n\n        utxo {\n           utxoBootstrap = true\n           storingUtxoSnapshots = 0\n        }\n        nipopow {\n           nipopowBootstrap = true\n           p2pNipopows = 2\n        }\n    }\n\n}\n\nscorex {\n    restApi {\n        apiKeyHash = \"324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf\"\n        bindAddress = \"127.0.0.1:9053\"\n    }\n    network {\n        bindAddress = \"127.0.0.1:9030\"\n        # Use this if you want to bind it to a public address\n        #declaredAddress = \"\"\n    }\n}\n```",
  "keywords": [
    "node",
    "privacy",
    "anonymity",
    "configuration",
    "tor](https://www.torproject.org",
    "download",
    "tor/",
    "network",
    "internet",
    "traffic",
    "series",
    "volunteer",
    "server",
    "relay",
    "guide",
    "ergo",
    "127.0.0.1:9050",
    "socks",
    "proxy",
    "connection",
    "interface",
    "scorex.network.bindaddress",
    "127.0.0.1:9030",
    "127.0.0.1:9053",
    "java",
    "system",
    "property",
    "localhost",
    "-dsocksproxyport=9050",
    "-xmx4",
    "-jar",
    "ergo-*.jar",
    "example",
    "file",
    "mining",
    "utxo",
    "storingutxosnapshot",
    "nipopow",
    "nipopowbootstrap",
    "p2pnipopow",
    "scorex",
    "restapi",
    "apikeyhash",
    "bindaddress",
    "address",
    "declaredaddress"
  ],
  "sections": [
    {
      "heading": "Running your Node over Tor",
      "content": "Tor is a network that helps anonymize your internet traffic by routing it through a series of volunteer-operated servers (relays). This guide explains how to configure your Ergo node to route its P2P network traffic through Tor.\nIf you have Tor installed and running (typically listening on 127.0.0.1:9050 for SOCKS proxy connections), you first need to ensure your node's P2P and API interfaces are bound to localhost in your ergo.conf file:\nconf\nscorex.network.bindAddress = \"127.0.0.1:9030\"\nscorex.restApi.bindAddress = \"127.0.0.1:9053\"\nWith Tor installed and running, and the configuration above set, you then launch the Ergo node using specific Java system properties (-D) to direct its outgoing network traffic through the Tor SOCKS proxy:\nbash\njava -DsocksProxyHost=localhost -DsocksProxyPort=9050 -Xmx4G -jar ergo-*.jar --mainnet -c ergo.conf"
    },
    {
      "heading": "Example Configuration File",
      "content": "```conf\nergo {\n    node {\n        mining = false\nutxo {\n       utxoBootstrap = true\n       storingUtxoSnapshots = 0\n    }\n    nipopow {\n       nipopowBootstrap = true\n       p2pNipopows = 2\n    }\n}\n}\nscorex {\n    restApi {\n        apiKeyHash = \"324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf\"\n        bindAddress = \"127.0.0.1:9053\"\n    }\n    network {\n        bindAddress = \"127.0.0.1:9030\"\n        # Use this if you want to bind it to a public address\n        #declaredAddress = \"\"\n    }\n}\n```"
    }
  ],
  "qa_pairs": []
}