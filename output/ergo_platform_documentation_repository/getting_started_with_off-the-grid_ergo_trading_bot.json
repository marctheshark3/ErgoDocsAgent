{
  "title": "Getting Started with Off-the-Grid Ergo Trading Bot",
  "source_url": "docs/uses/off_the_grid_tut.md",
  "summary": "# Getting Started with Off-the-Grid Ergo Trading Bot\n\nThis guide provides a thorough walkthrough for setting up and operating the **[Off-the-Grid Ergo Trading Bot](https://github.com/Telefragged/off-the-grid)** decentralized grid trading bot on the Ergo blockchain. /// details | Video Guide\n    {type: info, open: true}\nAlternatively, a video walkthrough from MarcTheShark can be found here: [Ergo Grid Trading Bot Setup](https://www.youtube.com/watch?v=LsRb8_G9rzE)\n///\n\n---\n\n## Prerequisites\n\nBefore proceeding, ensure the following:\n\n1. **Knowledge and Tools:**\n\n    - Basic understanding of the Ergo blockchain and grid trading strategies.\n    - Familiarity with Rust programming language and CLI tools. 2. **Environment Setup:**\n\n    - Installed [Rust](https://rustup.rs/) and Cargo (Rust's package manager).\n    - Configured Ergo node and wallet.",
  "keywords": [
    "grid",
    "ergo",
    "trading",
    "guide",
    "walkthrough",
    "blockchain",
    "detail",
    "video",
    "type",
    "info",
    "marctheshark",
    "setup](https://www.youtube.com",
    "watch?v",
    "lsrb8_g9rze",
    "prerequisite",
    "proceeding",
    "following",
    "knowledge",
    "tools",
    "understanding",
    "strategy",
    "familiarity",
    "rust",
    "programming",
    "language",
    "tool",
    "environment",
    "setup",
    "installed",
    "rust](https://rustup.rs/",
    "cargo",
    "package",
    "manager",
    "configured",
    "node",
    "wallet",
    "follow",
    "setup](https://docs.ergoplatform.com",
    "guide](https://docs.ergoplatform.com",
    "installation",
    "optional",
    "building",
    "execution",
    "nix](https://nixos.org/",
    "overview",
    "enable",
    "feature",
    "contract",
    "order",
    "safety",
    "chain",
    "tracking",
    "compatibility",
    "spectrum",
    "liquidity",
    "matching",
    "limitations",
    "contracts",
    "exercise",
    "caution",
    "asset",
    "profit",
    "risk",
    "market",
    "condition",
    "step",
    "clone",
    "repository",
    "bash",
    "https://github.com/telefragged/off-the-grid.git",
    "build",
    "simplicity",
    "./result",
    "--release",
    "./target",
    "release",
    "configuration",
    "node_config.json",
    "file",
    "api_url",
    "http://127.0.0.1:9053",
    "api_key",
    "example",
    "json",
    "generate",
    "scans",
    "command",
    "scan_config.json",
    "scan",
    "create",
    "config",
    "--rescan",
    "fetch",
    "token",
    "information",
    "usability",
    "list",
    "orders",
    "parameter",
    "grid_id",
    "name",
    "trade",
    "total_value",
    "total",
    "value",
    "number",
    "price",
    "range",
    "identifier",
    "comet",
    "confirm",
    "transaction",
    "screen",
    "prompt",
    "manage",
    "monitor",
    "grids",
    "active",
    "view",
    "details",
    "replace",
    "redeem",
    "configure",
    "matcher",
    "reward",
    "address",
    "reward_address",
    "export",
    "matcher_reward_address=\"your_reward_address",
    "error",
    "failure",
    "optimize",
    "analyze",
    "performance",
    "monitoring",
    "check",
    "issue",
    "opportunity",
    "improvement",
    "tail",
    "experiment",
    "parameters",
    "setting",
    "integrate",
    "analytics",
    "trend",
    "best",
    "practice",
    "security",
    "safeguard",
    "credential",
    "over",
    "investing",
    "date",
    "update",
    "assistance",
    "documentation",
    "community"
  ],
  "sections": [
    {
      "heading": "Getting Started with Off-the-Grid Ergo Trading Bot",
      "content": "This guide provides a thorough walkthrough for setting up and operating the Off-the-Grid Ergo Trading Bot decentralized grid trading bot on the Ergo blockchain.\n/// details | Video Guide\n    {type: info, open: true}\nAlternatively, a video walkthrough from MarcTheShark can be found here: Ergo Grid Trading Bot Setup\n///"
    },
    {
      "heading": "Prerequisites",
      "content": "Before proceeding, ensure the following:\nKnowledge and Tools:\n\nBasic understanding of the Ergo blockchain and grid trading strategies.\nFamiliarity with Rust programming language and CLI tools.\n\n\n\nEnvironment Setup:\n\nInstalled Rust and Cargo (Rust's package manager).\nConfigured Ergo node and wallet. Follow Ergo Node Setup and Wallet Guide.\n\n\n\nNix Installation (Optional):\n\nFor easier building and execution, install Nix."
    },
    {
      "heading": "Overview of Off-the-Grid",
      "content": "Off-the-Grid enables decentralized, automated grid trading on the Ergo blockchain, providing features such as:\nSecure contract-based trading ensuring order safety.\nOff-chain bots for order tracking and execution.\nCompatibility with Spectrum AMM for liquidity matching.\nLimitations:\nContracts are not audited\u2014exercise caution with significant assets.\nProfits are not guaranteed, and risks depend on market conditions."
    },
    {
      "heading": "1. Clone and Build the Repository",
      "content": "Clone the Repository:\nbash\ngit clone https://github.com/Telefragged/off-the-grid.git\ncd off-the-grid\n\n\nBuild with Cargo or Nix:\n\n\nWith Nix: (Recommended for simplicity)\nbash\nnix build\nThe executable is placed in ./result/bin/off-the-grid.\n\n\nWith Cargo:\nbash\ncargo build --release\nThe executable is in ./target/release/off-the-grid."
    },
    {
      "heading": "2. Node Setup",
      "content": "Node Configuration:\nUpdate the node_config.json file with:\n\napi_url: Your Ergo node's API URL (e.g., http://127.0.0.1:9053).\napi_key: API key from your Ergo node.\n\nExample:\njson\n{\n    \"api_url\": \"http://127.0.0.1:9053\",\n    \"api_key\": \"your-wallet-api-key\"\n}\n\n\nSet Up Wallet:\nFollow the Ergo wallet setup guide. Ensure the wallet is initialized and synchronized.\n\n\nGenerate Scans Configuration:\nRun the following command to generate scan_config.json:\nbash\noff-the-grid scans create-config\nTo include all existing boxes, add --rescan to the command."
    },
    {
      "heading": "3. Fetch Token Information (Optional)",
      "content": "For better usability, update the token list:\nbash\noff-the-grid tokens update\nThis fetches token details from Spectrum's API and saves them locally."
    },
    {
      "heading": "4. Create Grid Orders",
      "content": "Define a Grid Order:\nUse the grid create command to specify trading parameters:\nbash\noff-the-grid grid create -t <token_name> -v <total_value> -o <num_orders> -r <high>-<low> -i <grid_id>\n\n<token_name>: Name of the token to trade.\n<total_value>: Total Ergo value for the grid.\n<num_orders>: Number of grid orders.\n<high> and <low>: Price range for the grid.\n<grid_id>: Unique identifier for the grid.\n\nExample:\nbash\noff-the-grid grid create -t COMET -v 10 -o 50 -r 50000-100000 -i comet\n\n\nConfirm Transaction:\nAfter generating the grid order, review and confirm using on-screen prompts."
    },
    {
      "heading": "5. Manage and Monitor Grids",
      "content": "List Active Grids:\nbash\noff-the-grid grid list\nThis command displays all active grids with details like bid/ask prices and profit.\n\n\nView Grid Details:\nbash\noff-the-grid grid details -i <grid_id>\nReplace <grid_id> with the grid's unique identifier.\n\n\nRedeem Grid Orders:\nClose or redeem grid orders with:\nbash\noff-the-grid grid redeem -i <grid_id>"
    },
    {
      "heading": "6. Run the Matching Bot",
      "content": "Configure Matcher:\nSet up the reward address in matcher_config.json:\njson\n{\n    \"reward_address\": \"your_reward_address\"\n}\nAlternatively, use an environment variable:\nbash\nexport MATCHER_REWARD_ADDRESS=\"your_reward_address\"\n\n\nStart the Matcher:\nbash\noff-the-grid matcher\nThe bot logs successful transactions and errors. Multiple matchers may compete for transactions, so occasional failures are expected."
    },
    {
      "heading": "7. Optimize and Analyze",
      "content": "Performance Monitoring:\nCheck logs to identify issues or opportunities for improvement:\nbash\noff-the-grid logs tail\n\n\nExperiment with Parameters:\nTest various configurations to find optimal settings for market conditions.\n\n\nIntegrate Analytics:\nUse tools like Spectrum to track market trends and evaluate the bot's performance."
    },
    {
      "heading": "Best Practices",
      "content": "Security: Safeguard your API keys and wallet credentials.\n\n\nCaution: Avoid over-investing in untested strategies or assets.\n\n\nStay Updated: Keep the bot, tokens, and configs up-to-date with regular updates.\nFor additional assistance, consult the repository's documentation or contact the community."
    }
  ],
  "qa_pairs": []
}