{
  "title": "Android Node: Direct Termux Setup (Digest Mode)",
  "source_url": "docs/node/install/node-android/termux-digest.md",
  "summary": "---\ntags:\n  - Android\n  - Node\n  - Mobile\n  - Termux\n  - Installation\n  - Guide\n  - Digest Mode\n---\n\n# Android Node: Direct Termux Setup (Digest Mode) This guide details the recommended method for running an Ergo node on Android using Termux directly. This approach is best suited for the resource-efficient `stateType=\"digest\"` mode. **Prerequisites:**\n\n*   Android device meeting the [requirements](node-android.md#device-requirements). *   Termux installed from F-Droid (see [main Android guide](node-android.md#direct-termux-setup-digest-mode)).",
  "keywords": [
    "android",
    "node",
    "termux",
    "installation",
    "guide",
    "digest",
    "mode",
    "direct",
    "setup",
    "method",
    "ergo",
    "approach",
    "resource",
    "prerequisites",
    "device",
    "requirements](node",
    "android.md#device",
    "requirement",
    "droid",
    "guide](node",
    "android.md#direct",
    "step",
    "update",
    "packages",
    "bash",
    "upgrade",
    "answer",
    "default",
    "prompt",
    "install",
    "dependencies",
    "java",
    "openjdk-17",
    "wget",
    "download",
    "suffix",
    "release",
    "latest_jar_url=$(wget",
    "grep",
    "head",
    "latest_jar_url",
    "--show",
    "progress",
    "releases](https://github.com",
    "ergoplatform",
    "page",
    "script",
    "create",
    "configuration",
    "file",
    "nano",
    "ergo.conf",
    "statetype",
    "blockstokeep",
    "block",
    "~500mb-1",
    "mining",
    "flexibility",
    "nipopow.nipopowbootstrap",
    "optional",
    "nipopow",
    "parameter",
    "nipopowbootstrap",
    "scorex",
    "restapi",
    "hash",
    "example",
    "password",
    "apikeyhash",
    "324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf",
    "network",
    "peer",
    "discovery",
    "knownpeer",
    "port",
    "explanation",
    "worth",
    "storage",
    "need",
    "value",
    "space",
    "datum",
    "access",
    "synchronization",
    "option",
    "press",
    "ctrl",
    "exit",
    "memory",
    "-xmx",
    "-xmx1536",
    "-xmx2",
    "monitor",
    "browser",
    "http://127.0.0.1:9053",
    "panel",
    "initial",
    "sync",
    "utxo",
    "snapshot",
    "utxobootstrap",
    "time",
    "activity",
    "usage",
    "disk",
    "clarification",
    "troubleshooting"
  ],
  "sections": [
    {
      "heading": "Android Node: Direct Termux Setup (Digest Mode)",
      "content": "This guide details the recommended method for running an Ergo node on Android using Termux directly. This approach is best suited for the resource-efficient stateType=\"digest\" mode.\nPrerequisites:\nAndroid device meeting the requirements.\nTermux installed from F-Droid (see main Android guide).\nSteps:\nUpdate Termux Packages:\nOpen Termux and run:\n    bash\n    pkg update && pkg upgrade -y\nAnswer default prompts if asked.\n\n\nInstall Dependencies:\nInstall Java (OpenJDK 17 recommended) and wget:\n    bash\n    pkg install openjdk-17 wget -y\n\n\nDownload Ergo Node JAR:\nFor stateType=\"digest\", the standard Ergo node JAR (without -rocksdb suffix) is usually sufficient.\n\nUse wget to download the latest release:\n    ```bash\n    # Get the URL for the latest standard JAR\n    LATEST_JAR_URL=$(wget -qO- \"https://api.github.com/repos/ergoplatform/ergo/releases/latest\" | grep -o 'https://github.com/ergoplatform/ergo/releases/download/.ergo-[0-9.].jar' | head -n 1)\nDownload it\necho \"Downloading latest Ergo node JAR from: $LATEST_JAR_URL\"\nwget -q --show-progress \"$LATEST_JAR_URL\" -O ergo.jar\n*   *(Verify the downloaded URL or manually find the correct URL on the [Ergo Releases](https://github.com/ergoplatform/ergo/releases) page if the script fails).*\n4.  **Create Configuration File (`ergo.conf`):**\n    *   Create the file using `nano`:bash\nnano ergo.conf\n*   Paste the following configuration, suitable for mobile digest mode:conf\nergo {\n  node {\n    stateType = \"digest\"\n    blocksToKeep = 1440 // Keep ~1 day of full blocks (~500MB-1GB), adjust if needed\n    mining = false\n# Enable faster bootstrapping (both recommended for flexibility)\nnipopow.nipopowBootstrap = true\nutxoBootstrap = true\n\n# Optional: Adjust NiPoPoW parameters if using nipopowBootstrap\n# nipopow.p2pNipopows = 2\n\n}\n}\nscorex {\n  restApi {\n    # Set your desired API key hash (generate one if needed)\n    # Example hash for password \"hello\":\n    apiKeyHash = \"324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf\"\n  }\n ..."
    },
    {
      "heading": "Download it",
      "content": "echo \"Downloading latest Ergo node JAR from: $LATEST_JAR_URL\"\nwget -q --show-progress \"$LATEST_JAR_URL\" -O ergo.jar\n*   *(Verify the downloaded URL or manually find the correct URL on the [Ergo Releases](https://github.com/ergoplatform/ergo/releases) page if the script fails).*\n4.  **Create Configuration File (`ergo.conf`):**\n    *   Create the file using `nano`:bash\nnano ergo.conf\n*   Paste the following configuration, suitable for mobile digest mode:conf\nergo {\n  node {\n    stateType = \"digest\"\n    blocksToKeep = 1440 // Keep ~1 day of full blocks (~500MB-1GB), adjust if needed\n    mining = false\n# Enable faster bootstrapping (both recommended for flexibility)\nnipopow.nipopowBootstrap = true\nutxoBootstrap = true\n\n# Optional: Adjust NiPoPoW parameters if using nipopowBootstrap\n# nipopow.p2pNipopows = 2\n}\n}\nscorex {\n  restApi {\n    # Set your desired API key hash (generate one if needed)\n    # Example hash for password \"hello\":\n    apiKeyHash = \"324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf\"\n  }\n  network {\n    # Optional: Add known reliable peers if discovery is slow\n    # knownPeers = [\"ip:port\", \"ip:port\"]\n  }\n}\n*   **Explanation:**\n*   `stateType = \"digest\"`: Enables the lightweight digest mode.\n*   `blocksToKeep = 1440`: Keeps roughly the last day's worth of full blocks. Adjust based on storage/needs. Lower values save space but limit historical data access via API.\n*   `nipopow.nipopowBootstrap = true` & `utxoBootstrap = true`: Enable fast synchronization methods. The node will use the best available option from peers.\n    *   Save the file: Press `CTRL + O`, then `Enter`.\n    *   Exit nano: Press `CTRL + X`.\n5.  **Launch the Node:**\n    *   Run the node, allocating memory with `-Xmx`. Start with 1GB or 1.5GB:bash\njava -Xmx1536M -jar ergo.jar --mainnet -c ergo.conf\n``\n    *   *(Adjust-Xmx1536M(1.5GB) based on your device. If it crashes, try-Xmx1Gor increase if you have more RAM available, e.g.,-Xmx2G).*\n6.  **Monitor Synchronization:**\n    *..."
    }
  ],
  "qa_pairs": []
}