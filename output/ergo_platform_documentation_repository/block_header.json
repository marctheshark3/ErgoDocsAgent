{
  "title": "Block Header",
  "source_url": "docs/dev/data-model/block-header.md",
  "summary": "---\ntags:\n  - Block Header\n  - Data Model\n---\n\n# Block Header\n\n*(Back to: [Block Overview](block.md))* The **block header** in Ergo serves as a concise summary of a [block's](block.md) critical information. It plays a vital role in maintaining the integrity and security of the blockchain. ## Functions\n\n* **Chain Synchronization:** Headers enable efficient synchronization between [nodes](install.md) on the network. By exchanging and validating headers, nodes can quickly agree on the current state of the blockchain without downloading every full block.",
  "keywords": [
    "block",
    "header",
    "data",
    "model",
    "overview](block.md",
    "ergo",
    "summary",
    "information",
    "role",
    "integrity",
    "security",
    "blockchain",
    "function",
    "chain",
    "synchronization",
    "nodes](install.md",
    "network",
    "node",
    "state",
    "proof",
    "work](autolykos.md",
    "validation",
    "miner",
    "work",
    "solution",
    "requirement",
    "hash",
    "section",
    "transactions](block",
    "proofs](block",
    "extension](extension",
    "section.md",
    "tampering",
    "content",
    "mismatch",
    "components",
    "class",
    "ergoplatform",
    "blob",
    "master",
    "core",
    "scala",
    "modifier",
    "history",
    "header.scala",
    "structure",
    "overview",
    "field",
    "version",
    "protocol",
    "upgrade",
    "change",
    "compatibility",
    "parentid",
    "link",
    "adproofsroot",
    "digest",
    "adproofs](block",
    "utxo",
    "set](eutxo.md",
    "root",
    "merkle",
    "tree](structure",
    "transactions.md",
    "timestamp",
    "time",
    "nbit",
    "target",
    "height",
    "genesis",
    "block](emission.md",
    "convention",
    "extension",
    "section](extension",
    "datum",
    "powsolution",
    "puzzle",
    "effort",
    "vote",
    "preference",
    "consensus",
    "parameters](governance.md",
    "unparsedbyte",
    "inclusion",
    "sizeopt",
    "size",
    "performance",
    "concepts",
    "verification",
    "piece",
    "unspent",
    "transaction",
    "output",
    "record",
    "distribution",
    "cryptocurrency",
    "pow)](autolykos.md",
    "mechanism",
    "immutability"
  ],
  "sections": [
    {
      "heading": "Block Header",
      "content": "(Back to: Block Overview)\nThe block header in Ergo serves as a concise summary of a block's critical information. It plays a vital role in maintaining the integrity and security of the blockchain."
    },
    {
      "heading": "Functions",
      "content": "Chain Synchronization: Headers enable efficient synchronization between nodes on the network. By exchanging and validating headers, nodes can quickly agree on the current state of the blockchain without downloading every full block.\nProof-of-Work Validation: The header contains information necessary to verify the miner's Proof-of-Work (PoW) solution, ensuring that the block meets the network's difficulty requirements.\nBlock Integrity: Headers include hashes that link to other sections of the block (transactions, proofs, extension), guaranteeing the integrity of the entire block. Any tampering with the block's content would result in a mismatch of these hashes."
    },
    {
      "heading": "Components",
      "content": "The Header class in Header.scala defines the structure of the block header. Here's an overview of the key fields:\nversion: Indicates the protocol version used to create the block. This allows for future upgrades and changes to the blockchain while maintaining backward compatibility.\nparentId: The ID of the previous block in the blockchain. This links blocks together, forming a chain.\nADProofsRoot: A cryptographic digest of the ADProofs that validate changes to the UTXO set.\nstateRoot: A digest representing the root of the Merkle tree that captures the state of the UTXO set after this block is applied.\ntransactionsRoot: A digest of the Merkle root of all transactions included in the block.\ntimestamp: The time when the block was created, as reported by the miner.\nnBits: Represents the difficulty target for the block, determining how hard it was to mine.\nheight: The block's height in the blockchain (genesis block has height 0 or 1 depending on convention, Ergo starts at 1).\nextensionRoot: A digest of the Merkle root of the extension section, which can contain arbitrary data.\npowSolution: The solution to the Proof-of-Work puzzle, demonstrating that the miner expended the necessary computational effort.\nvotes: Votes cast by miners to signal preferences for changes to consensus parameters.\nunparsedBytes: A field to accommodate future protocol upgrades, allowing for the inclusion of data not yet parsed by current versions.\nsizeOpt: An optional field storing the size of the header to optimize performance."
    },
    {
      "heading": "Key Concepts",
      "content": "Merkle Tree: A data structure used extensively in blockchains to efficiently verify data integrity. It allows for quick verification that a particular piece of data is included in a larger set.\nUTXO (Unspent Transaction Output) Set: The record of all unspent transaction outputs on the blockchain, representing the current distribution of the cryptocurrency.\nProof-of-Work (PoW): A consensus mechanism that requires miners to solve a computationally intensive puzzle to add blocks to the blockchain. This ensures the security and immutability of the chain."
    }
  ],
  "qa_pairs": []
}