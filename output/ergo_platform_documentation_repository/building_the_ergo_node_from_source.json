{
  "title": "Building the Ergo Node from Source",
  "source_url": "docs/node/install/build-from-source.md",
  "summary": "---\ntags:\n  - Node\n  - Installation\n  - Build\n  - Source Code\n  - SBT\n  - Development\n  - Release Candidate\n---\n\n# Building the Ergo Node from Source\n\nWhile downloading the pre-compiled JAR from the [Ergo GitHub releases page](https://github.com/ergoplatform/ergo/releases/) is recommended for most users, you might need to build the node from source if you:\n\n*   Need a specific version not available as a pre-compiled JAR (e.g., a specific development commit or Release Candidate). *   Want to contribute to Ergo node development. *   Prefer compiling the software yourself. ## Prerequisites\n\n*   **Git:** [Install Git](https://git-scm.com/downloads) if you don't have it.",
  "keywords": [
    "node",
    "installation",
    "build",
    "source",
    "code",
    "development",
    "release",
    "candidate",
    "ergo",
    "github",
    "page](https://github.com",
    "ergoplatform",
    "user",
    "version",
    "commit",
    "prefer",
    "software",
    "prerequisite",
    "install",
    "git](https://git",
    "scm.com",
    "download",
    "java",
    "recommendation",
    "repository",
    "ergo#requirement",
    "openjdk",
    "scala",
    "tool",
    "sbt](https://www.scala",
    "download.html",
    "step",
    "clone",
    "bash",
    "https://github.com/ergoplatform/ergo.git",
    "directory",
    "checkout",
    "specific",
    "optional",
    "default",
    "branch",
    "master",
    "example",
    "v5.0.10",
    "handle",
    "snapshot",
    "dependencies",
    "candidates",
    "library",
    "sigmastate",
    "interpreter",
    "dependency",
    "guide",
    "dependencies](snapshot",
    "dependencies.md",
    "compile",
    "assembly",
    "task",
    "file",
    "target",
    "scala-*/",
    "project",
    "folder",
    "scala-2.13",
    "ergo-*.jar",
    "name",
    "number",
    "manual",
    "setup",
    "guide](manual.md",
    "docker",
    "guide](docker.md",
    "instruction",
    "node](manual.md#setting"
  ],
  "sections": [
    {
      "heading": "Building the Ergo Node from Source",
      "content": "While downloading the pre-compiled JAR from the Ergo GitHub releases page is recommended for most users, you might need to build the node from source if you:\nNeed a specific version not available as a pre-compiled JAR (e.g., a specific development commit or Release Candidate).\nWant to contribute to Ergo node development.\nPrefer compiling the software yourself."
    },
    {
      "heading": "Prerequisites",
      "content": "Git: Install Git if you don't have it.\nJava Development Kit (JDK): A compatible JDK is required (typically JDK 9 or higher). Check the specific version recommendations in the main Ergo repository README. OpenJDK is recommended.\nSBT (Scala Build Tool): Install SBT."
    },
    {
      "heading": "Build Steps",
      "content": "Clone Repository:\nbash\n    git clone https://github.com/ergoplatform/ergo.git\nNavigate to Directory:\nbash\n    cd ergo\nCheckout Specific Version (Optional):\nTo build the absolute latest development code (potentially unstable), stay on the default branch (master).\n\nTo build a specific release or release candidate (RC), check out the corresponding tag using git checkout <tag_name>. Find tags on the releases page.\n    ```bash\n    # Example for a specific release\n    git checkout v5.0.10 \nExample for a Release Candidate\ngit checkout v6.0.0-RC2 \n4.  **Handle SNAPSHOT Dependencies (If Applicable):**\n    *   Some development versions, especially **Release Candidates**, may depend on unreleased `SNAPSHOT` versions of libraries (like `sigmastate-interpreter`). If the next step fails due to missing SNAPSHOT dependencies, you **must** build and publish these dependencies locally first.\n    *   **See the dedicated guide: [Handling SNAPSHOT Dependencies](snapshot-dependencies.md)**\n5.  **Compile the JAR:**\n    *   Run the SBT `assembly` task. This compiles the code and packages the node and all its dependencies into a single executable JAR file.bash\nsbt assembly\n``\n    *   The resulting JAR file will be located in thetarget/scala-/directory within theergoproject folder (e.g.,target/scala-2.13/ergo-.jar). The exact name will include the version number.\n6.  **Locate the JAR:** Find the generatedergo-.jarfile in thetarget/scala-/directory. You can now move this JAR file to your desired node installation folder (e.g., theergo` folder created in the Manual Setup guide).\nYou can also build and run the node using Docker. See the Docker setup guide for instructions.\nAfter successfully building the JAR, proceed with Setting Up Your Node as described in the main manual installation guide."
    },
    {
      "heading": "Example for a Release Candidate",
      "content": "git checkout v6.0.0-RC2 \n4.  **Handle SNAPSHOT Dependencies (If Applicable):**\n    *   Some development versions, especially **Release Candidates**, may depend on unreleased `SNAPSHOT` versions of libraries (like `sigmastate-interpreter`). If the next step fails due to missing SNAPSHOT dependencies, you **must** build and publish these dependencies locally first.\n    *   **See the dedicated guide: [Handling SNAPSHOT Dependencies](snapshot-dependencies.md)**\n5.  **Compile the JAR:**\n    *   Run the SBT `assembly` task. This compiles the code and packages the node and all its dependencies into a single executable JAR file.bash\nsbt assembly\n``\n    *   The resulting JAR file will be located in thetarget/scala-/directory within theergoproject folder (e.g.,target/scala-2.13/ergo-.jar). The exact name will include the version number.\n6.  **Locate the JAR:** Find the generatedergo-.jarfile in thetarget/scala-/directory. You can now move this JAR file to your desired node installation folder (e.g., theergo` folder created in the Manual Setup guide)."
    },
    {
      "heading": "Alternative: Docker Build",
      "content": "You can also build and run the node using Docker. See the Docker setup guide for instructions.\nAfter successfully building the JAR, proceed with Setting Up Your Node as described in the main manual installation guide."
    }
  ],
  "qa_pairs": []
}