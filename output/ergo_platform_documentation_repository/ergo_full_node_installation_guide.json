{
  "title": "Ergo Full Node Installation Guide",
  "source_url": "docs/node/install/manual.md",
  "summary": "---\ntags:\n  - Node\n  - Installation\n  - Manual Setup\n  - Full Node\n  - Guide\n---\n\n# Ergo Full Node Installation Guide\n\nThis guide covers the manual setup process for running an Ergo full node. For alternative methods, see [Docker Setup](docker.md) or [Running on Android](node-android.md). ## Getting Started\n\n### Preparing Your Environment\n\n1. **Create a Folder**: Start by creating a dedicated folder for your Ergo node files (e.g., `ergo` in your home directory). 2.  **Obtain the Ergo Client JAR:**",
  "keywords": [
    "node",
    "installation",
    "manual",
    "setup",
    "full",
    "guide",
    "ergo",
    "process",
    "method",
    "docker",
    "setup](docker.md",
    "android](node",
    "environment",
    "folder",
    "file",
    "home",
    "directory",
    "client",
    "option",
    "download",
    "github",
    "page](https://github.com",
    "ergoplatform",
    "ergo-<version>.jar",
    "user",
    "build",
    "source",
    "version",
    "release",
    "candidate",
    "development",
    "source](build",
    "note",
    "snapshot",
    "dependency",
    "issue",
    "configuration",
    "text",
    "default",
    "setting",
    "apikeyhash",
    "mining",
    "scorex",
    "restapi",
    "hash",
    "access",
    "example",
    "password",
    "324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf",
    "files",
    "documentation](conf.md",
    "terminal",
    "command",
    "prompt",
    "java",
    "-jar",
    "network",
    "--mainnet",
    "--testnet",
    "memory",
    "-xmx",
    "bash",
    "mainnet",
    "adjust",
    "-xmx4",
    "system",
    "-xmx2",
    "-xmx8",
    "performance",
    "sync",
    "replace",
    "name",
    "initialization",
    "synchronization",
    "blockchain",
    "history",
    "amount",
    "time",
    "hour",
    "hardware",
    "speed",
    "mode](modes.md",
    "verifying",
    "monitor",
    "panel",
    "http://127.0.0.1:9053",
    "port",
    "testnet",
    "browser",
    "block",
    "height",
    "check",
    "status",
    "/info",
    "endpoint",
    "info",
    "fullheight",
    "explorer",
    "explorer.ergoplatform.com](https://explorer.ergoplatform.com",
    "additional",
    "resource",
    "troubleshooting",
    "guide](troubleshooting.md",
    "files](conf.md",
    "modes](modes.md",
    "guide](testnet.md",
    "faq](node"
  ],
  "sections": [
    {
      "heading": "Ergo Full Node Installation Guide",
      "content": "This guide covers the manual setup process for running an Ergo full node. For alternative methods, see Docker Setup or Running on Android."
    },
    {
      "heading": "Preparing Your Environment",
      "content": "Create a Folder: Start by creating a dedicated folder for your Ergo node files (e.g., ergo in your home directory).\nObtain the Ergo Client JAR: You have two main options:\nDownload (Recommended): Visit the Ergo GitHub releases page and download the latest stable ergo-<version>.jar file. This is the simplest method for most users. Place the downloaded JAR file in your ergo folder.\nBuild from Source: If you need a specific version (like a Release Candidate) or want to contribute to development, you can compile the JAR yourself. This requires Git, JDK, and SBT.\nSee the detailed guide: Building the Ergo Node from Source\nNote: Building development versions might require handling SNAPSHOT dependencies. Refer to the build guide and the specific SNAPSHOT Dependencies guide if you encounter issues."
    },
    {
      "heading": "Setting Up Your Node",
      "content": "Create a Configuration File (ergo.conf):\n\nIn your ergo folder, create a text file named ergo.conf.\nThis file overrides default node settings. Only add settings you need to change.\nStart with a basic configuration (adjust apiKeyHash later if needed):\n    conf\n    ergo {\n        node {\n            mining = false // Disable mining unless intended\n        }\n    }\n    scorex {\n        restApi {\n            // Set a secure API key hash for API access\n            // Example hash for password \"hello\":\n            apiKeyHash = \"324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf\" \n        }\n    }\nFor more configuration options, see the Configuration Files documentation.\n\n\n\nLaunch Your Node:\n\nOpen a terminal or command prompt in your ergo folder.\nRun the node using the java -jar command, specifying the JAR file, network (--mainnet or --testnet), and configuration file (-c). Allocate sufficient memory using -Xmx.\n    bash\n    # Example for mainnet with 4GB RAM allocated\n    java -jar -Xmx4G ergo-<version>.jar --mainnet -c ergo.conf\nAdjust -Xmx4G based on your system's available RAM (e.g., -Xmx2G, -Xmx8G). More RAM generally improves performance, especially during sync.\nReplace ergo-<version>.jar with the actual name of your downloaded or built JAR file.\n\n\n\nWait for Initialization & Synchronization:\n\nThe node will start up and begin synchronizing with the Ergo network. This process downloads and validates the blockchain history.\nSynchronization can take a significant amount of time (hours to days) depending on your hardware, network speed, and the chosen Node Mode. Be patient."
    },
    {
      "heading": "Verifying Node Synchronization",
      "content": "Monitor via Web Panel: Open http://127.0.0.1:9053/panel (or port 9052 for testnet) in your web browser. During sync, it should show \"Active synchronization\" and increasing block height.\nCheck Sync Status: Once synchronization is complete, the panel will indicate \"Node is synced.\" You can also check the /info endpoint (http://127.0.0.1:9053/info) and compare the reported fullHeight with a reliable public explorer like explorer.ergoplatform.com."
    },
    {
      "heading": "Additional Resources",
      "content": "Troubleshooting Guide\nNode Configuration Files\nNode Modes\nNode API (Swagger)\nTestnet Guide\nNode FAQ"
    }
  ],
  "qa_pairs": []
}