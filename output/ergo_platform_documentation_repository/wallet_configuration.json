{
  "title": "Wallet Configuration",
  "source_url": "docs/node/conf/conf-wallet.md",
  "summary": "# Wallet Configuration\n\n## Secret Storage\n\n### Secret Directory\n```conf\nsecretDir = ${ergo.directory}\"/wallet/keystore\"\n```\nThis configures the directory where the wallet's secret information, such as private keys, will be stored. The directory is set to a \"keystore\" folder inside the \"wallet\" folder at the location specified by `${ergo.directory}`.\n\n### Encryption\nThe encryption section contains configurations related to how the wallet's secret information is encrypted. #### Pseudo-random function\n```conf\nprf = \"HmacSHA256\"\n```\nThe `prf` configures the pseudo-random function used in the encryption. In this case, it is set to \"HmacSHA256\". #### Number of PBKDF2 Iterations\n```conf\nc = 128000\n```\nThe `c` configures the number of iterations used in the PBKDF2 (Password-Based Key Derivation Function 2) encryption algorithm.",
  "keywords": [
    "wallet",
    "configuration",
    "storage",
    "secret",
    "directory",
    "secretdir",
    "keystore",
    "information",
    "folder",
    "location",
    "encryption",
    "section",
    "function",
    "hmacsha256",
    "case",
    "number",
    "pbkdf2",
    "iteration",
    "password",
    "derivation",
    "algorithm",
    "length",
    "derived",
    "dklen",
    "seed",
    "strength",
    "bits",
    "seedstrengthbit",
    "option",
    "mnemonic",
    "phrase",
    "language",
    "mnemonicphraselanguage",
    "spent",
    "boxes",
    "keepspentboxes",
    "transaction",
    "output",
    "default",
    "defaulttransactionfee",
    "eip3",
    "usepreeip3derivation",
    "scheme",
    "dust",
    "limit",
    "dustlimit",
    "null",
    "amount",
    "token",
    "example",
    "node",
    "self",
    "optimal",
    "inputs",
    "maxinputs",
    "optimalinput",
    "input",
    "specifie",
    "test",
    "keys",
    "quantity",
    "testmnemonic",
    "ozone",
    "drill",
    "grab",
    "fiber",
    "curtain",
    "grace",
    "pudding",
    "thank",
    "cruise",
    "picnic",
    "setting",
    "testing",
    "purpose",
    "mode",
    "testkeysqty",
    "tokens",
    "whitelist",
    "tokenswhitelist",
    "eip27",
    "checkeip27",
    "transfer",
    "presence",
    "emission",
    "profile",
    "user",
    "load",
    "memory",
    "cache",
    "bloom",
    "filter",
    "usage",
    "exchange",
    "situation",
    "appserver"
  ],
  "sections": [
    {
      "heading": "Secret Directory",
      "content": "conf\nsecretDir = ${ergo.directory}\"/wallet/keystore\"\nThis configures the directory where the wallet's secret information, such as private keys, will be stored. The directory is set to a \"keystore\" folder inside the \"wallet\" folder at the location specified by ${ergo.directory}."
    },
    {
      "heading": "Encryption",
      "content": "The encryption section contains configurations related to how the wallet's secret information is encrypted."
    },
    {
      "heading": "Pseudo-random function",
      "content": "conf\nprf = \"HmacSHA256\"\nThe prf configures the pseudo-random function used in the encryption. In this case, it is set to \"HmacSHA256\"."
    },
    {
      "heading": "Number of PBKDF2 Iterations",
      "content": "conf\nc = 128000\nThe c configures the number of iterations used in the PBKDF2 (Password-Based Key Derivation Function 2) encryption algorithm."
    },
    {
      "heading": "Desired Bit-length of the Derived Key",
      "content": "conf\ndkLen = 256\nThe dkLen sets the desired length of the derived encryption key, in bits."
    },
    {
      "heading": "Seed Strength Bits",
      "content": "conf\nseedStrengthBits = 160\nThis configures the length of the seed used in generating the wallet's private keys, in bits. Options include 128, 160, 192, 224, and 256."
    },
    {
      "heading": "Mnemonic Phrase Language",
      "content": "conf\nmnemonicPhraseLanguage = \"english\"\nThis sets the language to be used for the wallet's mnemonic seed phrase. Options include \"chinese_simplified\", \"chinese_traditional\", \"english\", \"french\", \"italian\", \"japanese\", \"korean\", and \"spanish\"."
    },
    {
      "heading": "Keep Spent Boxes",
      "content": "conf\nkeepSpentBoxes = false\nThis option determines whether to keep spent transaction outputs or to delete them immediately."
    },
    {
      "heading": "Default Transaction Fee",
      "content": "conf\ndefaultTransactionFee = 1000000\nThis sets the default transaction fee the wallet uses when a fee is not specified."
    },
    {
      "heading": "Use Pre-EIP3 Derivation",
      "content": "conf\nusePreEip3Derivation = false\nThis setting determines whether to use the pre-EIP3 key derivation scheme or not."
    },
    {
      "heading": "Dust Limit",
      "content": "conf\ndustLimit = null\nThe dustLimit sets the minimum amount of tokens that can be included in a transaction output. If it's set to null (default), there is no minimum limit.\nFor example, with dustLimit = 1000000, the node wallet will ignore boxes to self that contain less than .001 ERG."
    },
    {
      "heading": "Maximum and Optimal Inputs",
      "content": "conf\nmaxInputs = 100\noptimalInputs = 3\nThe maxInputs setting determines the maximum number of inputs a transaction can have. The optimalInputs setting specifies the preferred number of inputs for a transaction."
    },
    {
      "heading": "Test Mnemonic and Keys Quantity",
      "content": "```conf"
    },
    {
      "heading": "testKeysQty = 5",
      "content": "``\nThese settings are used for testing purposes. If atestMnemonicis set, the wallet will operate in test mode, using this mnemonic seed. ThetestKeysQty` determines the number of keys to generate for the test."
    },
    {
      "heading": "Tokens Whitelist",
      "content": "conf\ntokensWhitelist = null\nIf set, the wallet will automatically burn non-whitelisted tokens from inputs when making transactions. If it's null, no tokens will be automatically burnt."
    },
    {
      "heading": "Check EIP27",
      "content": "conf\ncheckEIP27 = false\nThis setting determines whether to handle re-emission tokens in the wallet correctly. For example, it affects how transfers are done in the presence of re-emission tokens."
    },
    {
      "heading": "Profile",
      "content": "conf\nprofile = \"user\"\nThe wallet profile helps the wallet understand the expected load and allocate memory for caches and Bloom filters accordingly. Options are: \"user\" (for ordinary usage), \"exchange\" (for high load situations, consuming ~20MB of RAM for Bloom filters), and \"appServer\" (in between)."
    }
  ],
  "qa_pairs": []
}