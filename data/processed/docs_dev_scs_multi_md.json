{
  "id": "docs_dev_scs_multi_md",
  "title": "Multi-Stage Protocols",
  "summary": "Multi-Stage Protocols utilize a technique involving transaction trees to mimic persistent storage in UTXO-based systems. This approach introduces on-chain computations and enables the execution of parallel actions within smart contracts, offering functionality akin to Ethereum's accounts but without the associated overhead. The concept is illustrated through various examples, including contracts for a Rock Paper Scissors game with provable fairness, a Reversible Address with anti-theft features, and a comprehensive ICO. The document also provides tutorials and guides for a deeper understanding of Multi-Stage Protocols, including ensuring secure user entry, bootstrap funneling, and the workflow for off-chain and on-chain development.",
  "qa_pairs": [
    {
      "question": "What are the advantages of using Multi-Stage Contracts?",
      "answer": "Multi-Stage Contracts utilize transaction trees to mimic persistent storage in UTXO-based systems, enabling on-chain computations and parallel actions within smart contracts, while offering functionality akin to Ethereum's accounts without the associated overhead."
    },
    {
      "question": "What is the key concept behind Multi-Stage Protocols?",
      "answer": "Multi-Stage Protocols involve interlinking multiple UTXOs, each containing snippets of code, to create extensive multi-stage protocols and enable the execution of parallel actions within smart contracts."
    },
    {
      "question": "What are some example applications of Multi-Stage Protocols?",
      "answer": "Example applications of Multi-Stage Protocols include a Rock Paper Scissors game with provable fairness, a Reversible Address with anti-theft features, and a comprehensive ICO."
    },
    {
      "question": "What resources are available for learning more about Multi-Stage Protocols?",
      "answer": "Resources for learning more about Multi-Stage Protocols include the 'Multi-Stage Contracts in the UTXO Model' paper and video presentation, as well as tutorials on ensuring secure user entry and bootstrap funneling, and the workflow for multi-stage protocol development."
    },
    {
      "question": "How do Multi-Stage Protocols compare to Ethereum's account model?",
      "answer": "Multi-Stage Protocols offer the advantages of persistent storage and a shared global context like Ethereum's account model, but without the associated overhead, by utilizing a technique involving transaction trees."
    }
  ],
  "sections": [
    {
      "heading": "Introduction",
      "level": 0,
      "content": "---\ntags:\n  - Multi-Stage Protocols\n---"
    },
    {
      "heading": "Multi-Stage Protocols",
      "level": 1,
      "content": "Unspent Transaction Outputs (UTXOs) are known for their scalability and reduced error rates. However, Ethereum's account model offers the advantages of persistent storage and a shared global context. *Multi-Stage Contracts* utilize a technique involving [*transaction trees*](tx-tree.md) to mimic persistent storage in UTXO-based systems. This is achieved by interlinking multiple UTXOs, each containing snippets of code, to create extensive multi-stage protocols. This approach introduces _on-chain computations_ and enables the **execution of parallel actions within smart contracts**.\n\nThis method offers functionality akin to Ethereum's accounts but without the associated overhead.\n\nFor additional insights, refer to the *Multi-Stage Contracts in the UTXO Model* [(Paper)](https://storage.googleapis.com/ergo-cms-media/docs/paper_26.pdf) and [(Video Presentation)](https://www.youtube.com/watch?v=g3FlM_WOwBU)."
    },
    {
      "heading": "Examples",
      "level": 2,
      "content": "The concept is illustrated through various examples, including contracts for a [Rock Paper Scissors game with provable fairness](rock-paper-scissor.md), a [Reversible Address with anti-theft features](reversible-address.md), and a [comprehensive ICO](ico.md)."
    },
    {
      "heading": "Tutorials & Guides",
      "level": 2,
      "content": "Explore the following resources for a deeper understanding of Multi-Stage Protocols:\n\n- [Ensuring Secure User Entry and Bootstrap Funneling in Multi-Stage Protocols](https://www.ergoforum.org/t/secure-user-entry-bootstrap-funneling-in-multi-stage-protocols/228)\n- [Workflow for Multi-Stage Protocol Development: Off-Chain and On-Chain](https://www.ergoforum.org/t/multi-stage-protocol-off-chain-on-chain-development-workflow/269)\n\n(Note: The third link is a duplicate and has been omitted to improve the page's clarity and usefulness.)"
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/dev/scs/multi.md",
  "processed_at": "2025-05-11T19:30:28.131139",
  "ai_processed": true
}