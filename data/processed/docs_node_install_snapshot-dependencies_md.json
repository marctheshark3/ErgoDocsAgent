{
  "id": "docs_node_install_snapshot-dependencies_md",
  "title": "Handling SNAPSHOT Dependencies When Building Ergo Node",
  "summary": "This document provides guidance on handling SNAPSHOT dependencies when building the Ergo node from source code. It explains what SNAPSHOT versions are, why they can cause build issues, and the steps to resolve the problem. The key steps include: 1) Identifying the required SNAPSHOT dependency, 2) Cloning the dependency repository, 3) Checking out the correct commit/branch, and 4) Publishing the dependency locally using `sbt publishLocal`. This allows the Ergo node build process to find the required SNAPSHOT dependency and successfully complete the build.",
  "qa_pairs": [
    {
      "question": "What is this document about?",
      "answer": "---\ntags:\n  - Node\n  - Installation\n  - Build\n  - Source Code\n  - SBT\n  - Development\n  - Release Candidate\n  - SNAPSHOT\n  - Dependencies\n  - Troubleshooting\n---\n\n# Handling SNAPSHOT Dependencies When..."
    },
    {
      "question": "What is the title of this document?",
      "answer": "Handling SNAPSHOT Dependencies When Building Ergo Node"
    },
    {
      "question": "What is the 'Introduction' section about?",
      "answer": "---\ntags:\n  - Node\n  - Installation\n  - Build\n  - Source Code\n  - SBT\n  - Development\n  - Release Ca..."
    },
    {
      "question": "What is the 'Handling SNAPSHOT Dependencies When Building Ergo Node' section about?",
      "answer": "When [building the Ergo node from source](build-from-source.md), especially when working with develo..."
    },
    {
      "question": "What is the 'The Problem' section about?",
      "answer": "*   **What are SNAPSHOTs?** SNAPSHOT versions represent unstable, work-in-progress builds of librari..."
    }
  ],
  "sections": [
    {
      "heading": "Introduction",
      "level": 0,
      "content": "---\ntags:\n  - Node\n  - Installation\n  - Build\n  - Source Code\n  - SBT\n  - Development\n  - Release Candidate\n  - SNAPSHOT\n  - Dependencies\n  - Troubleshooting\n---"
    },
    {
      "heading": "Handling SNAPSHOT Dependencies When Building Ergo Node",
      "level": 1,
      "content": "When [building the Ergo node from source](build-from-source.md), especially when working with development branches or Release Candidates (RCs), you might encounter build failures related to `SNAPSHOT` dependencies."
    },
    {
      "heading": "The Problem",
      "level": 2,
      "content": "*   **What are SNAPSHOTs?** SNAPSHOT versions represent unstable, work-in-progress builds of libraries (like `sigmastate-interpreter`, `scorex-util`, etc.) that are not yet officially released.\n*   **Why they cause issues:** The standard build process (`sbt assembly`) tries to download dependencies from remote repositories (like Maven Central). SNAPSHOT versions are typically *not* published to these public repositories.\n*   **Error Message:** If the Ergo node version you are trying to build depends on a SNAPSHOT version (e.g., `6.0.0-RC2-SNAPSHOT`) that isn't available remotely or locally, the build will fail with errors indicating unresolved dependencies or artifacts not found."
    },
    {
      "heading": "The Solution: `sbt publishLocal`",
      "level": 2,
      "content": "To resolve this, you need to manually build the required SNAPSHOT dependency yourself and publish it to your *local* SBT repository (usually located at `~/.ivy2/local` on Linux/macOS or `%USERPROFILE%\\.ivy2\\local` on Windows). The Ergo node build process can then find the dependency locally."
    },
    {
      "heading": "Steps",
      "level": 2,
      "content": "1.  **Identify the Required SNAPSHOT Dependency:**\n    *   Check the `build.sbt` file in the root of the Ergo node source code (for the specific tag or branch you checked out, e.g., `v6.0.0-RC2`).\n    *   Look for lines defining versions for core libraries, like:\n        ```scala\n        val sigmastateVersion = \"6.0.0-RC2-SNAPSHOT\" \n        // or similar for scorexVersion, etc.\n        ```\n    *   Note the exact SNAPSHOT version string (e.g., `\"6.0.0-RC2-SNAPSHOT\"`) and the corresponding library's repository URL (usually found nearby in `build.sbt` or in the project's main README/documentation). For `sigmastate-interpreter`, it's typically `https://github.com/ergoplatform/sigmastate-interpreter.git`.\n    *   **Important:** Sometimes, specific Release Notes or developer announcements for an RC will specify the exact *commit hash* within the dependency's repository that corresponds to the required SNAPSHOT. Using the correct commit hash is crucial for compatibility. If unsure, check release notes or ask in developer channels.\n\n2.  **Clone the Dependency Repository:**\n    *   Clone the repository of the required library:\n        ```bash\n        # Example for sigmastate-interpreter\n        git clone https://github.com/ergoplatform/sigmastate-interpreter.git\n        ```\n\n3.  **Navigate and Checkout the Correct Commit/Branch:**\n    *   Change into the cloned dependency's directory:\n        ```bash\n        cd sigmastate-interpreter \n        ```\n    *   Check out the specific commit hash or branch corresponding to the required SNAPSHOT version identified in Step 1.\n        ```bash\n        # Example using a specific commit hash\n        git checkout <commit_hash_specified_in_release_notes> \n        \n        # Or, if a specific branch is indicated (less common for SNAPSHOTs)\n        # git checkout <branch_name>\n        ```\n\n4.  **Publish Locally:**\n    *   Run the `sbt publishLocal` command within the dependency's directory. This compiles the library and installs the SNAPSHOT version into your local Ivy repository.\n        ```bash\n        sbt publishLocal\n        ```\n    *   Wait for the process to complete successfully.\n\n5.  **Return and Build Ergo Node:**\n    *   Navigate back to the main Ergo node source directory:\n        ```bash\n        cd ../ergo \n        ```\n    *   Now, run the Ergo node build command again:\n        ```bash\n        sbt assembly\n        ```\n    *   The build should now find the locally published SNAPSHOT dependency and proceed.\n\n**Note:** If the Ergo node version depends on *multiple* SNAPSHOT libraries, you will need to repeat steps 2-4 for each required dependency before attempting the final `sbt assembly` in the Ergo node directory. Always refer to the specific release information for the version you are building."
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/node/install/snapshot-dependencies.md",
  "processed_at": "2025-05-11T19:55:47.492697",
  "ai_processed": true
}