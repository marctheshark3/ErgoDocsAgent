{
  "id": "docs_dev_wallet_standards_eip3_md",
  "title": "EIP-0003: Deterministic Wallet Standard",
  "summary": "The document defines the Ergo Improvement Proposal (EIP-0003) for a Deterministic Wallet Standard. It is based on the Bitcoin Improvement Proposal (BIP-0044) and aims to establish a common standard for deterministic wallets in the Ergo ecosystem. The key points are:\n\n- The document defines the \"coin_type\" for Ergo as 429, based on the ASCII values of the word \"ergo\".\n- The standard wallet path is m / 44' / 429' / account' / change / address_index.\n- The document does not use the \"change\" level for internal/change addresses, but only for external addresses. This simplifies the user experience and aligns with the availability of a privacy-preserving mixer (ErgoMix) in the Ergo ecosystem.",
  "qa_pairs": [
    {
      "question": "What is the purpose of EIP-0003?",
      "answer": "EIP-0003 attempts to define a specific coin_type for the Ergo ecosystem and a policy for how wallets use the change level."
    },
    {
      "question": "What is the coin_type for Ergo wallets according to EIP-0003?",
      "answer": "The coin_type for Ergo wallets is 429, based on the numerical values of the ASCII characters for the word 'ergo'."
    },
    {
      "question": "What is the full path for the first default key pair for an Ergo wallet?",
      "answer": "The full path is m / 44' / 429' / 0' / 0 / 0."
    },
    {
      "question": "What is the purpose of the change level in the BIP-44 path?",
      "answer": "In BIP-44, the constant 0 is used for the external addresses and constant 1 for internal addresses (aka change addresses)."
    },
    {
      "question": "What is the motivation behind defining a standard for deterministic wallets?",
      "answer": "The motivation is to allow end users to move between different wallet software trivially, thus setting a framework for a more cohesive ecosystem to grow."
    }
  ],
  "sections": [
    {
      "heading": "Introduction",
      "level": 0,
      "content": "---\ntags:\n  - EIP\n---"
    },
    {
      "heading": "EIP-0003: Deterministic Wallet Standard",
      "level": 1,
      "content": "> \ud83d\udd17 From [EIP-0003](https://github.com/ergoplatform/eips/blob/master/eip-0003.md)\n\nMotivation\n----------\n\nMotivation\n----------\n\n[BIP-0044](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki) defines a logical hierarchy for deterministic wallets. BIP-0044 is a common standard that is used directly (or used as inspiration) by countless projects in the cryptocurrency sphere.\n\nSuch a standard allows end users to move between different wallet software trivially, thus setting a framework for a more cohesive ecosystem to grow.\n\nThe standard has five levels part of its path:\n\n```\nm / 44' / coin_type' / account' / change / address_index\n```\n\n\nThis EIP attempts to define a specific `coin_type` for the Ergo ecosystem and a policy for how wallets use the `change` level.\n\n\nCoin Type\n--------\n\nRegistered **coin_type**s can be found in [SLIP-0044](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)\n\nWe will be using the word **ergo** summed based on the numerical values of the ASCII characters for the **coin_type**. As shown below, this means that our **coin_type** is `429`.\n\n``\n101 + 114 + 103 + 111 = 429\n``\n\nThus our path will look as such:\n\n```\nm / 44' / 429' / account' / change / address_index\n```\n\nAnd the first default key pair for an Ergo wallet will be:\n\n```\nm / 44' / 429' / 0' / 0 / 0\n```\n\nChange\n------\nIn BIP-44 the constant 0 is used for the external addresses and constant 1 for internal addresses (aka change addresses).\n\nFor EIP-3, we instead do not use constant 1 at all. Thus we do not support internal/change addresses, but only external addresses.\n\nAs such all wallets supporting EIP-3 should have any change within a transaction go back to the address using constant 0.\n\nThis decision was made to simplify the experience for end users and solidify a cohesive standard for wallets to target in the Ergo ecosystem. A full blown privacy-preserving mixer is already available within the ecosystem, ErgoMix, and thus the pseudo-anonymity provided by internal addresses is not particularly vital.\n\nThat said, in the future new wallets are more than welcome to create a new EIP for wallets which may wish to support internal addresses as well as an alternate standard (if valuable use cases arise).\n\n\nExport and import of public keys\n--------------------------------\nFor showing wallets in another wallet application as read-only wallets, it is possible to export the extended public key. This way, all addresses can be derived while signing is not possible. For this to work, the derived key on path m / 44' / 429' / 0' / 0 needs to be used for export and import.\n\nThe [BIP-0032](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#Serialization_format) defines a serialization format for keys that we can use here to export and import the xpubkey.\n\nExtended public keys are serialized as follows:\n\n    4 byte: version bytes (mainnet: 0x0488B21E; testnet: 0x043587CF)\n    1 byte: 4 (depth for our path m/44'/429'/0'/0)\n    4 bytes: the fingerprint of the parent's key (or 0x00000000 can be used as we don't validate on import)\n    4 bytes: 0x00000000 (child number)\n    32 bytes: the chain code\n    33 bytes: the public key key data\n    \nBIP-0032 leaves it open how this byte array should be encoded and suggests to use Base58 with a checksum. To not confuse Ergo xpubkeys with Bitcoin xpubkeys, we can use hex encoding instead."
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/dev/wallet/standards/eip3.md",
  "processed_at": "2025-05-11T19:41:49.093550",
  "ai_processed": true
}