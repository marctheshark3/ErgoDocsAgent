{
  "id": "docs_dev_wallet_payments_dApp_md",
  "title": "dApp Connector",
  "summary": "The document provides an introduction to dApp Connector, a tool that allows developers to easily create Ergo transactions using a pure JavaScript library. It mentions the existence of the Fleet library and the NightOwl dApp Connector React package, as well as a video tutorial for the latter. The document also includes information about using the Nautilus wallet with the dApp Connector, and provides links to resources related to message signing, authentication, and example code from the Yoroi wallet.",
  "qa_pairs": [
    {
      "question": "What is dApp Connector?",
      "answer": "dApp Connector is a way to easily create Ergo transactions with a pure JS library, such as Fleet."
    },
    {
      "question": "What is the NightOwl dApp Connector?",
      "answer": "NightOwl dApp Connector is a React package and accompanying video tutorial for creating dApps on the Ergo platform."
    },
    {
      "question": "How can you avoid conflicts with the Nautilus wallet?",
      "answer": "To avoid conflicts with Nautilus, you can call `ergoConnector.nautilus.connect()` instead of `window.ergo_request_read_access()` and `ergoConnector.nautilus.isConnected()` instead of `window.ergo_check_read_access()`."
    },
    {
      "question": "What resources are provided for message signing and user authentication with Nautilus wallet and sigma-rust?",
      "answer": "The resource provided is a tutorial on message signing and user authentication with Nautilus wallet and sigma-rust: https://www.dappstep.com/docs/tutorial-dapp-connector/message-signing-authentication"
    },
    {
      "question": "What example code is provided for Yoroi's dapp connector?",
      "answer": "The example code for Yoroi's dapp connector is available at: https://github.com/Emurgo/yoroi-frontend/tree/develop/packages/yoroi-connector/example-ergo"
    }
  ],
  "sections": [
    {
      "heading": "Introduction",
      "level": 0,
      "content": "---\ntags:\n  - JavaScript\n  - dApp Development\n---"
    },
    {
      "heading": "dApp Connector",
      "level": 1,
      "content": "[Fleet](fleet.md) lets you easily create Ergo transactions with a pure JS library. There is also [NightOwl dApp Connector](https://github.com/nightowlcasino/dApp-connector-react-package) React package and accompanying [video tutorial](https://twitter.com/NightOwlCasino/status/1529452399475179520).\n\n\n\n\n<!--Specifically with Nautilus, to avoid conflicts, you can call `ergoConnector.nautilus.connect()` in place of `window.ergo_request_read_access()` and `ergoConnector.nautilus.isConnected()` in place of `window.ergo_check_read_access()`-->"
    },
    {
      "heading": "Resources",
      "level": 2,
      "content": "- [Message signing and user authentication with Nautilus wallet and sigma-rust](https://www.dappstep.com/docs/tutorial-dapp-connector/message-signing-authentication)\n- [Yoroi's dapp connector example code](https://github.com/Emurgo/yoroi-frontend/tree/develop/packages/yoroi-connector/example-ergo)\n- Nautilus and SAFEW implements the same API as Yoroi ([EIP-12](https://github.com/ergoplatform/eips/pull/23/files#diff-cb3f835ea389f22c2f074a6acd820d178e44c82df8898e8ff36aea7f762b6710))"
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/dev/wallet/payments/dApp.md",
  "processed_at": "2025-05-11T19:40:26.012891",
  "ai_processed": true
}