{
  "id": "docs_dev_stack_mosaik_examples_md",
  "title": "Ergo Mosaik: A UI system for Ergo dApps",
  "summary": "Ergo Mosaik is a UI system for building Ergo dApps. The document provides examples of open-sourced Mosaik apps that can be used for inspiration when building Mosaik apps. The examples cover different technologies such as Spring and Kotlin DSL, Spring and Java, and Spring, Java and Freemarker. The apps showcase various features and functionalities, including a tutorial example, AgeUSD state and minting/redeeming, view elements and actions, token burning, NFT marketplace, and a decentralized coin flip.",
  "qa_pairs": [
    {
      "question": "What is Ergo Mosaik?",
      "answer": "Ergo Mosaik is a UI system for Ergo dApps."
    },
    {
      "question": "What are some example Mosaik apps mentioned in the content?",
      "answer": "The example Mosaik apps mentioned include Mosaik tutorial example app, Age USD demo, Mosaik view elements and actions, Burn tokens demo, NFT marketplace, and Obol Flip."
    },
    {
      "question": "What programming languages and frameworks are used in the example Mosaik apps?",
      "answer": "The example Mosaik apps use Spring and Kotlin DSL, Spring and Java, and Spring, Java and Freemarker."
    },
    {
      "question": "What are the key features or capabilities demonstrated by the example Mosaik apps?",
      "answer": "The example Mosaik apps demonstrate building UI, processing data using JSON templates and Freemarker, and integrating with ErgoPay for burning tokens."
    },
    {
      "question": "What is the purpose of the Mosaik system in the context of Ergo dApps?",
      "answer": "The Mosaik system provides a UI system for building Ergo dApps."
    }
  ],
  "sections": [
    {
      "heading": "Ergo Mosaik: A UI system for Ergo dApps",
      "level": 1,
      "content": ""
    },
    {
      "heading": "Example apps",
      "level": 2,
      "content": "The following Mosaik apps are open-sourced can be used to take inspiration from how to build own Mosaik apps."
    },
    {
      "heading": "Spring and Kotlin DSL",
      "level": 3,
      "content": "* [Mosaik tutorial example app](https://github.com/MrStahlfelge/mosaik-tutorial-series) - Example app for the [tutorial series](intro.md)\n* [Age USD demo](https://github.com/MrStahlfelge/mosaik-ageusddemo) - Example UI showing AgeUSD state and to mint and redeem SigRSV/SigUSD\n* [Mosaik view elements and actions](https://github.com/MrStahlfelge/mosaik/tree/develop/backend-demo-kotlin) - Showcasing all available view elements and actions\n* [Burn tokens demo](https://github.com/MrStahlfelge/mosaik-demo-tokenburn) - UI for burning tokens, fully functional with ErgoPay\n* [NFT marketplace](https://github.com/MrStahlfelge/mosaiknftmarketplace) - Example UI for an NFT marketplace\n* [Obol Flip](https://github.com/obolflip/obolflip-client) - Decentralized coin flip, downloadable Mosaik client"
    },
    {
      "heading": "Spring and Java",
      "level": 3,
      "content": "* [LazyBox, Alignments](https://github.com/MrStahlfelge/mosaik/tree/develop/backend-demo) - Example app building UI in pure Java"
    },
    {
      "heading": "Spring, Java and Freemarker",
      "level": 3,
      "content": "* [Visitor list](https://github.com/MrStahlfelge/mosaik/tree/develop/backend-demo) - Example app building UI and processing data using json templates and Freemarker"
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/dev/stack/mosaik/examples.md",
  "processed_at": "2025-05-11T19:35:49.324491",
  "ai_processed": true
}