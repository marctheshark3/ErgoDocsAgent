{
  "id": "docs_node_conf_conf-wallet_md",
  "title": "Wallet Configuration",
  "summary": "The document describes the configuration settings for an Ergo wallet. It covers the secret storage directory, encryption settings (including the pseudo-random function, number of PBKDF2 iterations, desired bit-length of the derived key, and seed strength bits), the mnemonic phrase language, and the option to keep or delete spent transaction outputs.",
  "qa_pairs": [
    {
      "question": "Where are the wallet's secret information stored?",
      "answer": "${ergo.directory}/wallet/keystore"
    },
    {
      "question": "What pseudo-random function is used for encryption?",
      "answer": "HmacSHA256"
    },
    {
      "question": "What is the purpose of the wallet's encryption settings?",
      "answer": "To configure how the wallet's secret information, such as private keys, is encrypted."
    },
    {
      "question": "What is the significance of the 'secretDir' configuration?",
      "answer": "It specifies the directory where the wallet's secret information is stored."
    },
    {
      "question": "What is the role of the 'prf' configuration?",
      "answer": "It sets the pseudo-random function used for encryption of the wallet's secret information."
    }
  ],
  "sections": [
    {
      "heading": "Wallet Configuration",
      "level": 1,
      "content": ""
    },
    {
      "heading": "Secret Storage",
      "level": 2,
      "content": ""
    },
    {
      "heading": "Secret Directory",
      "level": 3,
      "content": "```conf\nsecretDir = ${ergo.directory}\"/wallet/keystore\"\n```\nThis configures the directory where the wallet's secret information, such as private keys, will be stored. The directory is set to a \"keystore\" folder inside the \"wallet\" folder at the location specified by `${ergo.directory}`."
    },
    {
      "heading": "Encryption",
      "level": 3,
      "content": "The encryption section contains configurations related to how the wallet's secret information is encrypted."
    },
    {
      "heading": "Pseudo-random function",
      "level": 4,
      "content": "```conf\nprf = \"HmacSHA256\"\n```\nThe `prf` configures the pseudo-random function used in the encryption. In this case, it is set to \"HmacSHA256\"."
    },
    {
      "heading": "Number of PBKDF2 Iterations",
      "level": 4,
      "content": "```conf\nc = 128000\n```\nThe `c` configures the number of iterations used in the PBKDF2 (Password-Based Key Derivation Function 2) encryption algorithm."
    },
    {
      "heading": "Desired Bit-length of the Derived Key",
      "level": 4,
      "content": "```conf\ndkLen = 256\n```\nThe `dkLen` sets the desired length of the derived encryption key, in bits."
    },
    {
      "heading": "Seed Strength Bits",
      "level": 2,
      "content": "```conf\nseedStrengthBits = 160\n```\nThis configures the length of the seed used in generating the wallet's private keys, in bits. Options include 128, 160, 192, 224, and 256."
    },
    {
      "heading": "Mnemonic Phrase Language",
      "level": 2,
      "content": "```conf\nmnemonicPhraseLanguage = \"english\"\n```\nThis sets the language to be used for the wallet's mnemonic seed phrase. Options include \"chinese_simplified\", \"chinese_traditional\", \"english\", \"french\", \"italian\", \"japanese\", \"korean\", and \"spanish\"."
    },
    {
      "heading": "Keep Spent Boxes",
      "level": 2,
      "content": "```conf\nkeepSpentBoxes = false\n```\nThis option determines whether to keep spent transaction outputs or to delete them immediately."
    },
    {
      "heading": "Default Transaction Fee",
      "level": 2,
      "content": "```conf\ndefaultTransactionFee = 1000000\n```\nThis sets the default transaction fee the wallet uses when a fee is not specified."
    },
    {
      "heading": "Use Pre-EIP3 Derivation",
      "level": 2,
      "content": "```conf\nusePreEip3Derivation = false\n```\nThis setting determines whether to use the pre-EIP3 key derivation scheme or not."
    },
    {
      "heading": "Dust Limit",
      "level": 2,
      "content": "```conf\ndustLimit = null\n```\nThe `dustLimit` sets the minimum amount of tokens that can be included in a transaction output. If it's set to null (default), there is no minimum limit.\n\nFor example, with `dustLimit = 1000000`, the node wallet will ignore boxes to self that contain less than .001 ERG."
    },
    {
      "heading": "Maximum and Optimal Inputs",
      "level": 2,
      "content": "```conf\nmaxInputs = 100\noptimalInputs = 3\n```\nThe `maxInputs` setting determines the maximum number of inputs a transaction can have. The `optimalInputs` setting specifies the preferred number of inputs for a transaction."
    },
    {
      "heading": "Test Mnemonic and Keys Quantity",
      "level": 2,
      "content": "```conf"
    },
    {
      "heading": "testKeysQty = 5",
      "level": 1,
      "content": "```\nThese settings are used for testing purposes. If a `testMnemonic` is set, the wallet will operate in test mode, using this mnemonic seed. The `testKeysQty` determines the number of keys to generate for the test."
    },
    {
      "heading": "Tokens Whitelist",
      "level": 2,
      "content": "```conf\ntokensWhitelist = null\n```\nIf set, the wallet will automatically burn non-whitelisted tokens from inputs when making transactions. If it's null, no tokens will be automatically burnt."
    },
    {
      "heading": "Check EIP27",
      "level": 2,
      "content": "```conf\ncheckEIP27 = false\n```\nThis setting determines whether to handle re-emission tokens in the wallet correctly. For example, it affects how transfers are done in the presence of re-emission tokens."
    },
    {
      "heading": "Profile",
      "level": 2,
      "content": "```conf\nprofile = \"user\"\n```\nThe wallet profile helps the wallet understand the expected load and allocate memory for caches and Bloom filters accordingly. Options are: \"user\" (for ordinary usage), \"exchange\" (for high load situations, consuming ~20MB of RAM for Bloom filters), and \"appServer\" (in between)."
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/node/conf/conf-wallet.md",
  "processed_at": "2025-05-11T19:54:20.072194",
  "ai_processed": true
}