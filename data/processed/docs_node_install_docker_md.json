{
  "id": "docs_node_install_docker_md",
  "title": "Docker",
  "summary": "The document provides instructions for running the latest Ergo version in mainnet as a console application using Docker, as well as a Docker Compose configuration for running an Ergo node as a service. It covers how to run specific Ergo versions with custom configurations, and discusses considerations around port management and data storage. The document also mentions available Ergo Docker image versions and provides guidance on controlling memory and CPU usage.",
  "qa_pairs": [
    {
      "question": "What command runs the latest Ergo version in mainnet as a console application with logs printed to console?",
      "answer": "sudo docker run --rm -p 9030:9030 -p 127.0.0.1:9053:9053 -v /path/on/host/to/ergo/data:/home/ergo/.ergo ergoplatform/ergo --mainnet"
    },
    {
      "question": "What ports are opened when running the Ergo node in Docker?",
      "answer": "Port 9030 is opened globally and port 9053 is opened locally on the host system."
    },
    {
      "question": "Where is the Ergo node's data stored when running in Docker?",
      "answer": "The data is stored in the host directory /path/on/host/to/ergo/data."
    },
    {
      "question": "How can you run a specific Ergo version with a custom config file?",
      "answer": "sudo docker run -d -p 9030:9030 -p 127.0.0.1:9053:9053 -v /path/on/host/to/ergo/data:/home/ergo/.ergo -v /path/on/host/system/to/myergo.conf:/etc/myergo.conf -e MAX_HEAP=4G ergoplatform/ergo:<VERSION> --<networkId> -c /etc/myergo.conf"
    },
    {
      "question": "How can you run the Ergo node with Docker Compose?",
      "answer": "docker-compose up -d"
    }
  ],
  "sections": [
    {
      "heading": "Docker",
      "level": 1,
      "content": "To run the latest Ergo version in mainnet as a console application with logs printed to console:\n\n\n```bash\nsudo docker run --rm -p 9030:9030 -p 127.0.0.1:9053:9053 -v /path/on/host/to/ergo/data:/home/ergo/.ergo ergoplatform/ergo --mainnet\n```\nThis will connect to Ergo mainnet with default config and open port 9030 globally and 9053 locally on the host system. \n\nAll data will be stored in your host directory `/path/on/host/to/ergo/data`."
    },
    {
      "heading": "Docker Compose",
      "level": 2,
      "content": "```yaml\nversion: \"3.8\"\n\nservices:\n  # Ergo blockchain node\n  node:\n    image: ergoplatform/ergo\n    container_name: mn-ergo-node\n    command: --mainnet -c /etc/ergo.conf\n    volumes:\n      - ./.ergo:/home/ergo/.ergo\n      - ./ergo.conf:/etc/ergo.conf:ro\n    ports:\n      - 9053:9053\n      - 9030:9030\n    restart: unless-stopped\n    # Increase or decrease the max heap value as required\n    environment:\n        - MAX_HEAP=4G\n    logging:\n      options:\n        max-size: \"10m\"\n        max-file: \"3\"\n```\n\nRun the node with\n\n```bash\ndocker-compose up -d\n```\n\nFollow the logs with\n\n```bash\ndocker logs -f ergo-mainnet -n 200\n```\n\nNote that the node's data will be saved in `.ergo` directory you must create beforehand and change its group : \n\n```bash\nchown -R 9052:9052 .ergo\n```\n\nYour config file must be in the same directory with name `ergo.conf`\n\nThis will also limit the memory usage of node to 1400MB and cpu to 40%."
    },
    {
      "heading": "Running other versions",
      "level": 2,
      "content": "To run specific Ergo version `<VERSION>` as a service with custom config `/path/on/host/system/to/myergo.conf`:\n\n```bash\n    sudo docker run -d \\\n        -p 9030:9030 \\\n        -p 127.0.0.1:9053:9053 \\\n        -v /path/on/host/to/ergo/data:/home/ergo/.ergo \\\n        -v /path/on/host/system/to/myergo.conf:/etc/myergo.conf \\\n        -e MAX_HEAP=4G \\\n        ergoplatform/ergo:<VERSION> --<networkId> -c /etc/myergo.conf\n```\nAvailable versions can be found on [Ergo Docker image page](https://hub.docker.com/r/ergoplatform/ergo/tags), for example, `v4.0.23`.\n\nThis will connect to the Ergo mainnet or testnet following your configuration passed in `myergo.conf` and network flag `--<networkId>`. Every default config value would be overwritten with corresponding value in `myergo.conf`. `MAX_HEAP` variable can be used to control how much memory can the node consume.\n\nThis command also would store your data in `/path/on/host/to/ergo/data` on host system, and open ports `9030` (node communication) globally and `9053` (REST API) locally on host system. The `/path/on/host/to/ergo/data` directory must has `777` permissions or has owner/group numeric id equal to `9052` to be writable by container, as `ergo` user inside Docker image (please refer to Dockerfile).\n\nErgo node works normally behind NAT, so you can keep closed your `9030` port, hence other nodes could not discover and connect to yours one, only your node could initiate connections.\n\nIt is also a good practice to keep closed REST API port `9053`, and connect to your node from inside another container in the same Docker network (this case not covered by this short quick start manual)."
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/node/install/docker.md",
  "processed_at": "2025-05-11T19:55:06.086975",
  "ai_processed": true
}