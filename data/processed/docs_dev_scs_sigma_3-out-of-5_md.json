{
  "id": "docs_dev_scs_sigma_3-out-of-5_md",
  "title": "3-out-of-5 Threshold Signature",
  "summary": "The document discusses a 3-out-of-5 threshold signature script in the Ergo blockchain, which enables a ring spending contract where any member of a group can make a transaction from the same address without revealing the specific member. This application-level privacy is achieved through the integration of Sigma protocols in the Ergo core, allowing for trustless scripts to access mixers or other functionality without third-party involvement. The document provides an example of the threshold signature script and explains how it can be compiled to a Pay-to-Script (P2S) address, where Ergs can be sent and locked under the protection of the threshold signature contract.",
  "qa_pairs": [
    {
      "question": "What is this document about?",
      "answer": "# 3-out-of-5 Threshold Signature\n\nLet's say you want to create a ***ring spending contract***, where any member of a group can make a transaction from the same address, but you do not want anyone else..."
    },
    {
      "question": "What is the title of this document?",
      "answer": "3-out-of-5 Threshold Signature"
    },
    {
      "question": "What is the '3-out-of-5 Threshold Signature' section about?",
      "answer": "Let's say you want to create a ***ring spending contract***, where any member of a group can make a ..."
    }
  ],
  "sections": [
    {
      "heading": "3-out-of-5 Threshold Signature",
      "level": 1,
      "content": "Let's say you want to create a ***ring spending contract***, where any member of a group can make a transaction from the same address, but you do not want anyone else to know which specific member is spending the funds. This is not possible with Bitcoin. While Ethereum can achieve this, it would be expensive and complicated \u2013 especially with a ring size of 10 or 20 members, which might be required for robust privacy.\n\nWith Ergo, this kind of application can be created quickly, thanks to the integration of Sigma protocols in the core. This enables **self-sovereign application-level privacy**: trustless scripts that can be used to access mixers or other functionality without requiring any third parties.\n\n```scala\nval ringScript = s\"\"\"\n{\natLeast(\n  3, \n  Coll(\n    PK(\"9f8ZQt1Sue6W5ACdMSPRzsHj3jjiZkbYy3CEtB4BisxEyk4RsNk\"), \n    PK(\"9hFWPyhCJcw4KQyCGu4yAGfC1ieRAKyFg24FKjLJK2uDgA873uq\"), \n    PK(\"9fdVP2jca1e5nCTT6q9ijZLssGj6v4juY8gEAxUhp7YTuSsLspS\"), \n    PK(\"9gAKeRu1W4Dh6adWXnnYmfqjCTnxnSMtym2LPPMPErCkusCd6F3\"),\n    PK(\"9gmNsqrqdSppLUBqg2UzREmmivgqh1r3jmNcLAc53hk3YCvAGWE\")\n  )\n)\n}\n```\n\nThe above is an example of a `3-out-of-5` **threshold signature** script, which can be compiled to a Pay-to-Script (`P2S`) address. \n\nSending Ergs to the [resulting address](https://wallet.plutomonkey.com/p2s/?source=ewphdExlYXN0KAogIDMsIAogIENvbGwoCiAgICBQSygiOWY4WlF0MVN1ZTZXNUFDZE1TUFJ6c0hqM2pqaVprYll5M0NFdEI0QmlzeEV5azRSc05rIiksIAogICAgUEsoIjloRldQeWhDSmN3NEtReUNHdTR5QUdmQzFpZVJBS3lGZzI0RktqTEpLMnVEZ0E4NzN1cSIpLCAKICAgIFBLKCI5ZmRWUDJqY2ExZTVuQ1RUNnE5aWpaTHNzR2o2djRqdVk4Z0VBeFVocDdZVHVTc0xzcFMiKSwgCiAgICBQSygiOWdBS2VSdTFXNERoNmFkV1hublltZnFqQ1RueG5TTXR5bTJMUFBNUEVyQ2t1c0NkNkYzIiksCiAgICBQSygiOWdtTnNxcnFkU3BwTFVCcWcyVXpSRW1taXZncWgxcjNqbU5jTEFjNTNoazNZQ3ZBR1dFIikKICApCikKfQ==) locks them under the protection of this threshold signature contract.\n\nHere is a good introduction to [making a signature](https://www.youtube.com/watch?v=daP67yp-Czs&list=PLUWruihtE-HtL-JZk8Vb4Yn_H18aE3rb6&index=4)."
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/dev/scs/sigma/3-out-of-5.md",
  "processed_at": "2025-05-11T19:30:51.663836",
  "ai_processed": true
}