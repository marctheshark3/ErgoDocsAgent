{
  "id": "docs_mining_autolykos_md",
  "title": "Autolykos",
  "summary": "Autolykos is the Proof of Work algorithm used for mining Ergo. Autolykos v1 was designed to be ASIC-resistant and pool-resistant, but large players could bypass the pool resistance. Autolykos v2 was introduced with the following changes:\n\n- Removal of non-outsourceable puzzles\n- Optimization to bind an efficient solving procedure with a single table of ~2 GB\n- Table size increases over time, solely dependent on block height\n\nAutolykos v2 is based on the k-sum problem, where miners must find k (32) out of N (initially 2^26) elements such that the hash of their sum is less than the target value. The indexes are pseudorandom values derived from the block candidate and nonce, while the elements are derived from the block height and constants.\n\nThe algorithm is designed to be efficient for miners who store the table, which grows over time, reaching a fixed size of 2,143,944,600 elements at block 4,198,400.",
  "qa_pairs": [
    {
      "question": "What is Autolykos?",
      "answer": "Autolykos is the mining algorithm used for the Ergo blockchain, which is designed to be ASIC-resistant."
    },
    {
      "question": "What are the key changes introduced in Autolykos v2?",
      "answer": "The key changes in Autolykos v2 include the removal of non-outsourceable puzzles, optimization of the solving procedure with a ~2 GB table, and the table size increasing over time."
    },
    {
      "question": "What is the purpose of EIP-0009 'The Hardening Hard-Fork'?",
      "answer": "EIP-0009 facilitated the formation of mining pools by removing the non-outsourceable puzzles in Autolykos."
    },
    {
      "question": "What is the purpose of EIP27 'Emission Retargeting Soft-Fork'?",
      "answer": "EIP27 extended the Ergo emission by 4,566,336 blocks (~17.38 years)."
    },
    {
      "question": "What is the purpose of EIP37 'Tweaking Difficulty Adjustment Algorithm'?",
      "answer": "EIP37 made the difficulty adjustment mechanism more responsive by considering a shorter and more recent history of blocks."
    }
  ],
  "sections": [
    {
      "heading": "Introduction",
      "level": 0,
      "content": "---\ntags:\n  - Autolykos\n  - Mining\n  - Algorithm\n  - Proof of Work\n---"
    },
    {
      "heading": "Autolykos",
      "level": 1,
      "content": "Ergo mining is based on **Autolykos**, a fairly launched efficient [ASIC-resistant](asic.md) Proof of Work algorithm."
    },
    {
      "heading": "Overview",
      "level": 2,
      "content": "Autolykos, in its first version, was designed with inherent pool-resistance through the use of non-outsourceable puzzles. The transition to Autolykos v2 was marked by [EIP-0009: Hard-fork Activation protocol](eip9.md) ***'The Hardening Hard-Fork'*** on block `417,792`, which facilitated the formation of mining pools by removing the non-outsourceable puzzles.\n\nIn addition to EIP-0009, several other proposals have been implemented which impact the autolykos algorithm in regards to the emission and difficulty adjustment:\n\n- [**EIP27: Emission Retargeting Soft-Fork**](standards/eip27.md) was a significant milestone, passed with overwhelming community support, that extended emission by 4,566,336 blocks (~17.38 years). This change was activated on block `777217`. For more information see the [emission](emission.md) section.\n- [**EIP37: Tweaking Difficulty Adjustment Algorithm**](standards/eip37.md) made the difficulty adjustment mechanism more responsive by considering a shorter and more recent history of blocks. EIP37 didn't replace Autolykos but refined it, making it more resilient against sudden hash rate changes and adversarial disruptions. For more information see the [difficulty adjustment](difficulty.md) section."
    },
    {
      "heading": "Pool Resistance (Autolykos v1)",
      "level": 3,
      "content": "Autolykos V1 was initially designed to resist pooling. However, it was observed that large players could bypass this resistance using smart contracts. This issue was discussed in the paper [\"Bypassing Non-Outsourceable Proof-of-Work Schemes Using Collateralized Smart Contracts\"](https://ia.cr/2020/044) presented by Alex Chepurnoy at the WTSC workshop associated with Financial Cryptography and Data Security 2020 in Malaysia."
    },
    {
      "heading": "Autolykos V2",
      "level": 3,
      "content": "**Autolykos V2** introduced the following changes:\n\n- The *non-outsourceable puzzles* were removed.\n- The algorithm was optimized to bind an efficient solving procedure with a single table of ~2 GB (initially), significantly reducing the scope for memory optimization.\n- The table size, which determines the memory requirements of the solving algorithm, increases over time.\n- The table is solely dependent on the block height, eliminating any penalties for recalculating block candidates for the same height."
    },
    {
      "heading": "Key Concepts (Autolykos v2)",
      "level": 3,
      "content": "- Autolykos, both v1 and v2, is based on the **k-sum** problem. A miner is required to find **k (k=32)** out of **N (2<sup>n</sup> = 2<sup>26</sup> initially)** elements, such that the hash of their sum is less than the target value (inverse of the difficulty).\n- The *indexes* (**k**) are pseudorandom values derived from the block candidate and nonce.\n- The *elements* (**N**) are derived from the block height and constants. Unlike Autolykos v1, miners can now recalculate block candidates quickly as only the indexes depend on them.\n- The calculation of indexes also involves the same table\n    - (where elements are the last 31 bytes of **H(i | | h | | M )**, with **i** in the range [**0, N**),\n        - **h** representing the block height,\n        - and **M** serving as padding to slow down hash calculation (8kb of constant data).\n\nThe algorithm is designed to be efficient for miners who store the table, which initially requires **2<sup>26</sup> * 31 = 2,080,374,784** bytes (about 2GB)."
    },
    {
      "heading": "Table Size Evolution",
      "level": 3,
      "content": "The table size (**N** value) evolves over time as follows:\n\n- Until block `614,400`, **N** = 2<sup>26</sup> = 67,108,864 elements (31 bytes each).\n- From block `614,401` until block `4,198,400`, **N** increases by approximately 5% every 51,200 blocks (specifically, `n` increases by 1 every 102,400 blocks, so N doubles every 102,400 blocks).\n- At block `4,198,400`, the value of **N** is fixed at `2,143,944,600`.\n\n*(Note: Test vectors for N values are provided in the [Autolykos paper](https://www.docdroid.net/mcoitvK/ergopow-pdf)).*\n\n::cards::\n\n[\n  {\n    \"title\": \"Start Mining\",\n    \"url\": \"setup/join.md\",\n    \"content\": \"Getting setup with a mining pool.\"\n  },\n  {\n    \"title\": \"Algorithm\",\n    \"url\": \"algo-technical.md\",\n    \"content\": \"Dive into the Autolykos Algorithm technical details.\"\n  },\n  {\n    \"title\": \"Governance\",\n    \"url\": \"governance.md\",\n    \"content\": \"PoW To The People\"\n  },\n  {\n    \"title\": \"Storage Rent\",\n    \"url\": \"rent.md\",\n    \"content\": \"On-chain garbage collection that reduces the problem of blockchain bloat\"\n  },\n  {\n    \"title\": \"Difficulty Adjustment\",\n    \"url\": \"difficulty.md\",\n    \"content\": \"See how the mining difficulty is calculated.\"\n\n  },\n  {\n    \"title\": \"Emission\",\n    \"url\": \"emission.md\",\n    \"content\": \"The Ergo emission schedule\"\n  },\n\n]\n\n::/cards::\n\n\n\n/// details | FAQ\n     {type: note, open: true}\nFor information on how miners will be supported after emission ends see [this page](revenue.md)\n///"
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/mining/autolykos.md",
  "processed_at": "2025-05-11T19:50:24.070371",
  "ai_processed": true
}