{
  "id": "docs_node_conf_conf-api_md",
  "title": "API Dispatcher Configuration",
  "summary": "The document describes the configuration settings for the \"api-dispatcher\" in an actor-based system. The key points include:\n\n- The dispatcher type is set to \"Dispatcher\", which is an event-based dispatcher.\n- The executor type is set to \"fork-join-executor\", which allows for concurrent execution of tasks.\n- The minimum parallelism is set to 1, the parallelism factor is set to 2.0, and the maximum parallelism is set to 2.\n- The throughput is set to 4, which determines the maximum number of messages processed per actor before the thread switches to the next actor.\n- The configuration plays a crucial role in controlling the efficiency and fairness of processing messages for API-related actors in the application.",
  "qa_pairs": [
    {
      "question": "What is the purpose of the `api-dispatcher` configuration?",
      "answer": "The `api-dispatcher` configuration controls the dispatcher responsible for managing API-related actors in an actor-based system."
    },
    {
      "question": "What type of dispatcher is used in this configuration?",
      "answer": "The `type` setting specifies the dispatcher type as `Dispatcher`, which represents an event-based dispatcher."
    },
    {
      "question": "What type of execution service is used in this configuration?",
      "answer": "The `executor` setting determines the type of execution service as `fork-join-executor`, which allows tasks to be split into smaller parts and executed concurrently."
    },
    {
      "question": "What is the minimum number of threads specified in this configuration?",
      "answer": "The `parallelism-min` setting indicates the minimum number of threads to cap the factor-based parallelism number is 1."
    },
    {
      "question": "How is the parallelism factor calculated in this configuration?",
      "answer": "The `parallelism-factor` setting is used to calculate the parallelism, which is the ceiling of the number of available processors multiplied by the factor, which is set to 2.0."
    }
  ],
  "sections": [
    {
      "heading": "API Dispatcher Configuration",
      "level": 1,
      "content": "The `api-dispatcher` configuration controls the dispatcher responsible for managing API-related actors. In actor-based systems, the dispatcher is responsible for the execution of messages from the actor's mailbox."
    },
    {
      "heading": "Dispatcher Type",
      "level": 2,
      "content": "```conf\ntype = Dispatcher\n```\nThe `type` setting specifies the dispatcher type. In this configuration, `Dispatcher` is used, representing an event-based dispatcher."
    },
    {
      "heading": "Executor Type",
      "level": 2,
      "content": "```conf\nexecutor = \"fork-join-executor\"\n```\nThe `executor` setting determines the type of execution service used. Here, the `fork-join-executor` is utilized, which allows tasks to be split into smaller parts and executed concurrently, increasing efficiency."
    },
    {
      "heading": "Minimum Parallelism",
      "level": 3,
      "content": "```conf\nparallelism-min = 1\n```\nThe `parallelism-min` setting indicates the minimum number of threads to cap the factor-based parallelism number."
    },
    {
      "heading": "Parallelism Factor",
      "level": 3,
      "content": "```conf\nparallelism-factor = 2.0\n```\nThe `parallelism-factor` setting is used to calculate the parallelism, i.e., the number of threads. It is calculated as the ceiling of the number of available processors multiplied by the factor."
    },
    {
      "heading": "Maximum Parallelism",
      "level": 3,
      "content": "```conf\nparallelism-max = 2\n```\nThe `parallelism-max` setting determines the maximum number of threads to cap the factor-based parallelism number."
    },
    {
      "heading": "Throughput",
      "level": 2,
      "content": "```conf\nthroughput = 4\n```\nThe `throughput` setting defines the maximum number of messages processed per actor before the thread switches to the next actor. A lower value results in fairer, but potentially less efficient execution. Here, it's set to 4."
    },
    {
      "heading": "Full Code Snippet",
      "level": 2,
      "content": "```conf\napi-dispatcher {\n  type = Dispatcher\n  executor = \"fork-join-executor\"\n  fork-join-executor {\n    parallelism-min = 1\n    parallelism-factor = 2.0\n    parallelism-max = 2\n  }\n  throughput = 4\n}\n```\n\nOverall, the `api-dispatcher` configuration plays a crucial role in controlling the efficiency and fairness of processing messages for API-related actors in your application."
    }
  ],
  "source": "https://github.com/ergoplatform/ergodocs",
  "file_path": "docs/node/conf/conf-api.md",
  "processed_at": "2025-05-11T19:53:47.936328",
  "ai_processed": true
}