ErgoTree is a strictly typed language where every term must have a type to be well-formed and evaluated. The typing judgement $\Der{\Gamma}{e : T}$ indicates that term $e$ has type $T$ in the typing context $\Gamma$. The document presents the typing rules for ErgoTree, including rules for constants, variables, primitive operations, tuples, method calls, function expressions, function application, and block expressions. It also notes that each well-typed term has exactly one type, and defines helper functions $ptype$ and $mtype$ to handle type parameterization of primitive operations and methods. The document provides a comprehensive overview of the ErgoTree typing system.