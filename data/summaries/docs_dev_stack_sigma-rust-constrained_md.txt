This document provides guidance on using the Sigma-Rust library in resource-constrained environments, such as hardware wallets or embedded systems. It outlines the challenges, including code size, memory usage, lack of standard library support, and crypto dependencies. The solutions and approaches discussed include using the Sigma-Rust-Mini fork, manually configuring Sigma-Rust for no_std builds, and replacing the cryptographic backend from k256 to secp256k1. The document also highlights potential pitfalls, such as global allocator issues, dependency management, and thorough testing on the target platform. The overall goal is to enable the use of Sigma-Rust in resource-constrained environments while addressing the unique requirements and limitations of these environments.