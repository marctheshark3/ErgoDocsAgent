This document provides an overview of the key phases in the ErgoScript compiler pipeline, including specific implementations in the sigma-rust and sigmastate-interpreter projects. The ErgoScript compiler takes high-level ErgoScript code and translates it into an intermediate form that can be evaluated by the ErgoTree interpreter or serialized for execution in the Ergo blockchain.

The compiler pipeline includes the following phases: Lexical Analysis (Lexer), Syntax Analysis (Parser), High-level Intermediate Representation (HIR), Binding (Binder), and Type Inference. Each phase is described in detail, including how it works, error handling, and the specific implementations in the sigma-rust and sigmastate-interpreter projects.