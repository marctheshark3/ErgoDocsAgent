The document provides an improved and clearer documentation for the ErgoTree language, a typed, call-by-value, higher-order functional language without recursion. It supports features like single-assignment blocks, tuples, optional values, indexed collections with higher-order operations, short-circuiting logical operations, and ternary if-else expressions with lazy branches. The semantics of ErgoTree are specified by translating it to a lower-level language called Core-λ and providing its denotational evaluation semantics. The abstract syntax of ErgoTree is defined, and the typing rules are specified. The document also describes the lowering of ErgoTree terms to Core-λ, including the translation of lambda expressions, function application, method calls, tuples, logical operations, and block expressions.