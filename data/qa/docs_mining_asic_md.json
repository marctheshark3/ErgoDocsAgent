[
  {
    "question": "What is the key strategy employed by Autolykos v2 to resist ASIC mining?",
    "answer": "Autolykos v2 employs a dynamic strategy of scheduled memory table adjustments, effectively increasing the minimum GPU vRAM requirements for mining over time."
  },
  {
    "question": "Why does storing the 'list R' prove to be cost-effective in Autolykos v2?",
    "answer": "Storing the 'list R' proves to be cost-effective as fetching data from memory is quicker than performing repeated Blake2b256 hash calculations."
  },
  {
    "question": "How does the computational requirement of Autolykos v2 differ from Ethash?",
    "answer": "Ethash involves N elements when hashing, while Autolykos involves N elements for fetching 32 'r' values based on indexes generated. Autolykos is more memory-hard due to its higher reliance on memory bandwidth."
  },
  {
    "question": "What is the purpose of the line 8 in the Autolykos v2 algorithm?",
    "answer": "The line 8 serves as a gatekeeper, filtering out machines that do not meet the memory requirements."
  },
  {
    "question": "Why is the process of generating 32 'r' values in a single cycle not efficient in Autolykos v2?",
    "answer": "The process of generating 32 'r' values in a single cycle is not efficient, resulting in sparse output."
  }
]