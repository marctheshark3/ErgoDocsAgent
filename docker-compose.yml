version: '3.8'
services:
  ergo-docs-agent:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./output:/app/output  # Mount output directory for persistence
      - ./.env:/app/.env:ro   # Mount .env file as read-only
    environment:
      - PYTHONUNBUFFERED=1
    # Default: runs main.py with default settings
    # Uncomment ONE of these example commands or create your own:
    
    # To run with a specific configuration file:
    # command: --config custom-config.json
    
    # To process a specific source:
    # command: --source https://github.com/ergoplatform/ergodocs
    
    # To run in scheduled mode:
    # command: --schedule
    
    # To run immediately and exit:
    # command: --now 

  github-mcp:
    image: python:3.9
    volumes:
      - ./mcp-servers/github:/app
    command: python /app/github_server.py
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    ports:
      - "8081:8081"
    depends_on:
      - ollama

  filesystem-mcp:
    image: python:3.9
    volumes:
      - ./mcp-servers/filesystem:/app
      - ./documents:/data
    command: python /app/filesystem_server.py
    ports:
      - "8082:8082"
    environment:
      - DATA_DIR=/data

  qdrant-mcp:
    image: python:3.9
    volumes:
      - ./mcp-servers/qdrant:/app
    command: python /app/qdrant_server.py
    ports:
      - "8083:8083"
    depends_on:
      - qdrant
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333

  qdrant:
    image: qdrant/qdrant
    volumes:
      - qdrant-data:/qdrant/storage
    ports:
      - "6333:6333"

  brave-mcp:
    image: python:3.9
    volumes:
      - ./mcp-servers/brave:/app
    command: python /app/brave_server.py
    environment:
      - BRAVE_API_KEY=${BRAVE_API_KEY}
    ports:
      - "8084:8084"

  firecrawl-mcp:
    image: node:18
    volumes:
      - ./firecrawl-mcp:/app
    command: npx -y firecrawl-mcp
    environment:
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
    ports:
      - "8085:8085"



  ollama:
    image: ollama/ollama
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"

  scheduler:
    image: python:3.9
    volumes:
      - ./scheduler:/app
    command: cron -f
    configs:
      - source: cron_jobs
        target: /etc/cron.d/pipelines

configs:
  cron_jobs:
    file: ./cron.d/pipelines

volumes:
  qdrant-data:
  ollama-data: 